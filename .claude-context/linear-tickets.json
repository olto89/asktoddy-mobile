{
  "lastSynced": "2025-10-21T11:37:47.005Z",
  "user": {
    "name": "Oliver Todd",
    "email": "mrolivertodd@gmail.com"
  },
  "teams": [
    {
      "name": "Asktoddy",
      "key": "ASK"
    }
  ],
  "summary": {
    "total": 43,
    "mobile": 32
  },
  "byStatus": {
    "Backlog": [
      {
        "id": "ASK-43",
        "title": "[MOBILE-104] Add document download integration"
      },
      {
        "id": "ASK-42",
        "title": "[MOBILE-103] Integrate multi-modal input system"
      },
      {
        "id": "ASK-41",
        "title": "[MOBILE-102] Extract camera logic to reusable hooks"
      },
      {
        "id": "ASK-40",
        "title": "[MOBILE-101] Create thin client ChatScreen"
      },
      {
        "id": "ASK-38",
        "title": "[API-005] Implement document generation Edge Function"
      },
      {
        "id": "ASK-35",
        "title": "[API-002] Migrate AIMiddleware to analyze-construction Edge Function"
      },
      {
        "id": "ASK-12",
        "title": "🔌 Set up Supabase Edge Functions API ✅ COMPLETED"
      },
      {
        "id": "ASK-6",
        "title": "📦 Create monorepo structure for shared code ✅ COMPLETED"
      },
      {
        "id": "ASK-5",
        "title": "🏗️ Set up React Native project with Expo ✅ COMPLETED"
      },
      {
        "id": "ASK-11",
        "title": "📍 Port SmartLocationService to mobile (with GPS)"
      },
      {
        "id": "ASK-9",
        "title": "🛠️ Port ToolExpertiseService to mobile (offline)"
      },
      {
        "id": "ASK-8",
        "title": "🔨 Build ConstructionDataService API endpoints"
      },
      {
        "id": "ASK-7",
        "title": "🤖 Build GeminiService API endpoints"
      },
      {
        "id": "ASK-22",
        "title": "🌐 Deploy current web app to Vercel"
      },
      {
        "id": "ASK-21",
        "title": "🚀 Deploy MVP to TestFlight/Google Play Beta"
      },
      {
        "id": "ASK-20",
        "title": "✅ End-to-end testing of core flows"
      },
      {
        "id": "ASK-19",
        "title": "🔗 Connect mobile app to middleware API"
      },
      {
        "id": "ASK-17",
        "title": "💬 Implement chat interface"
      },
      {
        "id": "ASK-16",
        "title": "📊 Create analysis results screen"
      },
      {
        "id": "ASK-15",
        "title": "📸 Build camera/image picker component"
      },
      {
        "id": "ASK-14",
        "title": "🔐 Implement authentication layer"
      }
    ],
    "Done": [
      {
        "id": "ASK-24",
        "title": "Set up authentication system (free tier MVP)"
      },
      {
        "id": "ASK-30",
        "title": "Create UI components matching web app design system"
      },
      {
        "id": "ASK-23",
        "title": "Set up Expo React Native project with TypeScript"
      }
    ],
    "Todo": [
      {
        "id": "ASK-33",
        "title": "Add user feedback system for quote refinement"
      },
      {
        "id": "ASK-32",
        "title": "Implement context-aware pricing system"
      },
      {
        "id": "ASK-31",
        "title": "Build AI-agnostic middleware for quote generation"
      },
      {
        "id": "ASK-29",
        "title": "Test end-to-end flow and finalize MVP"
      },
      {
        "id": "ASK-28",
        "title": "Configure app for TestFlight deployment"
      },
      {
        "id": "ASK-27",
        "title": "Connect mobile app to Supabase Gemini analysis API"
      },
      {
        "id": "ASK-26",
        "title": "Create analysis results screen"
      },
      {
        "id": "ASK-25",
        "title": "Build MVP camera component for image capture"
      }
    ]
  },
  "byPriority": {
    "Medium": [
      {
        "id": "ASK-43",
        "title": "[MOBILE-104] Add document download integration"
      },
      {
        "id": "ASK-21",
        "title": "🚀 Deploy MVP to TestFlight/Google Play Beta"
      },
      {
        "id": "ASK-17",
        "title": "💬 Implement chat interface"
      }
    ],
    "High": [
      {
        "id": "ASK-42",
        "title": "[MOBILE-103] Integrate multi-modal input system"
      },
      {
        "id": "ASK-41",
        "title": "[MOBILE-102] Extract camera logic to reusable hooks"
      },
      {
        "id": "ASK-40",
        "title": "[MOBILE-101] Create thin client ChatScreen"
      },
      {
        "id": "ASK-38",
        "title": "[API-005] Implement document generation Edge Function"
      },
      {
        "id": "ASK-11",
        "title": "📍 Port SmartLocationService to mobile (with GPS)"
      },
      {
        "id": "ASK-9",
        "title": "🛠️ Port ToolExpertiseService to mobile (offline)"
      },
      {
        "id": "ASK-8",
        "title": "🔨 Build ConstructionDataService API endpoints"
      },
      {
        "id": "ASK-20",
        "title": "✅ End-to-end testing of core flows"
      },
      {
        "id": "ASK-19",
        "title": "🔗 Connect mobile app to middleware API"
      },
      {
        "id": "ASK-16",
        "title": "📊 Create analysis results screen"
      },
      {
        "id": "ASK-14",
        "title": "🔐 Implement authentication layer"
      }
    ],
    "Urgent": [
      {
        "id": "ASK-35",
        "title": "[API-002] Migrate AIMiddleware to analyze-construction Edge Function"
      },
      {
        "id": "ASK-12",
        "title": "🔌 Set up Supabase Edge Functions API ✅ COMPLETED"
      },
      {
        "id": "ASK-6",
        "title": "📦 Create monorepo structure for shared code ✅ COMPLETED"
      },
      {
        "id": "ASK-5",
        "title": "🏗️ Set up React Native project with Expo ✅ COMPLETED"
      },
      {
        "id": "ASK-7",
        "title": "🤖 Build GeminiService API endpoints"
      },
      {
        "id": "ASK-22",
        "title": "🌐 Deploy current web app to Vercel"
      },
      {
        "id": "ASK-15",
        "title": "📸 Build camera/image picker component"
      }
    ],
    "No Priority": [
      {
        "id": "ASK-24",
        "title": "Set up authentication system (free tier MVP)"
      },
      {
        "id": "ASK-30",
        "title": "Create UI components matching web app design system"
      },
      {
        "id": "ASK-33",
        "title": "Add user feedback system for quote refinement"
      },
      {
        "id": "ASK-32",
        "title": "Implement context-aware pricing system"
      },
      {
        "id": "ASK-31",
        "title": "Build AI-agnostic middleware for quote generation"
      },
      {
        "id": "ASK-29",
        "title": "Test end-to-end flow and finalize MVP"
      },
      {
        "id": "ASK-28",
        "title": "Configure app for TestFlight deployment"
      },
      {
        "id": "ASK-27",
        "title": "Connect mobile app to Supabase Gemini analysis API"
      },
      {
        "id": "ASK-26",
        "title": "Create analysis results screen"
      },
      {
        "id": "ASK-25",
        "title": "Build MVP camera component for image capture"
      },
      {
        "id": "ASK-23",
        "title": "Set up Expo React Native project with TypeScript"
      }
    ]
  },
  "allTickets": [
    {
      "id": "ASK-43",
      "linearId": "5cb25049-4edb-4889-bfc4-6e6a8030ab31",
      "title": "[MOBILE-104] Add document download integration",
      "description": "**Objective:** Download PDFs generated by middleware\n\n**Description:**\nIntegrate document generation buttons that appear after analysis, calling the document generation API.\n\n**Document Types:**\n\n- [ ] **PDF Quote**: Detailed cost breakdown\n- [ ] **Project Plan**: Timeline and phases\n- [ ] **Task List**: Actionable checklist\n\n**UI Integration:**\n\n```typescript\n// Message with document buttons\n{message.showDocumentButtons && (\n  <div className=\"document-buttons\">\n    <button onClick={() => downloadDocument('quote')}>\n      📄 Download PDF Quote\n    </button>\n    <button onClick={() => downloadDocument('timeline')}>\n      📅 Download Project Plan\n    </button>\n    <button onClick={() => downloadDocument('tasklist')}>\n      ✅ Download Task List\n    </button>\n  </div>\n)}\n```\n\n**Download Flow:**\n\n```typescript\nconst downloadDocument = async (type: DocumentType) => {\n  const response = await supabase.functions.invoke('generate-document', {\n    body: { \n      type,\n      projectType: analysis.projectType,\n      analysis,\n      pricing\n    }\n  })\n  \n  // Handle PDF blob download\n  // Show success message\n  // Track download event\n}\n```\n\n**Mobile Optimization:**\n\n- [ ] Native sharing integration\n- [ ] Download progress indicators\n- [ ] Save to device storage\n- [ ] Share via email/messaging\n- [ ] Offline access to downloaded documents",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-43/mobile-104-add-document-download-integration",
      "createdAt": "2025-10-15T09:52:39.696Z",
      "updatedAt": "2025-10-15T09:52:39.696Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-42",
      "linearId": "e5f646c0-4c3f-4015-b039-322f1cb7f360",
      "title": "[MOBILE-103] Integrate multi-modal input system",
      "description": "**Objective:** Support text + photos + videos + PDFs in chat interface\n\n**Description:**\nBuild comprehensive input system supporting all media types like the web app.\n\n**Input Types:**\n\n- [ ] **Text**: Auto-resize textarea with placeholder\n- [ ] **Photos**: Camera capture + gallery selection\n- [ ] **Videos**: Recording + gallery selection (60 second max)\n- [ ] **PDFs**: File picker with preview\n- [ ] **Multiple files**: Up to 4 attachments per message\n\n**ChatGPT-style Integration:**\n\n```typescript\ninterface ChatInputProps {\n  onSend: (data: {\n    text?: string\n    attachments?: Attachment[]\n  }) => void\n}\n\ninterface Attachment {\n  type: 'image' | 'video' | 'pdf'\n  uri: string\n  name: string\n  size: number\n  preview?: string\n}\n```\n\n**UI Components:**\n\n- [ ] Expandable text input\n- [ ] Attachment preview grid\n- [ ] Remove attachment buttons\n- [ ] File type icons\n- [ ] Upload progress indicators\n- [ ] File size validation messages\n\n**Validation:**\n\n* Images: 10MB max, JPG/PNG/HEIC\n* Videos: 10MB max, MP4/MOV, 60s max\n* PDFs: 200MB max, architectural drawings\n* Total: 4 files maximum per message",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-42/mobile-103-integrate-multi-modal-input-system",
      "createdAt": "2025-10-15T09:52:38.470Z",
      "updatedAt": "2025-10-15T09:52:38.470Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-41",
      "linearId": "4505f223-68b6-4f4a-bbd9-c273d7a1dd9f",
      "title": "[MOBILE-102] Extract camera logic to reusable hooks",
      "description": "**Objective:** Reuse existing camera functionality in chat interface\n\n**Description:**\nExtract working camera/gallery logic from CameraScreen into reusable hooks for integration with chat input.\n\n**Hooks to Create:**\n\n```typescript\n// useCameraCapture.ts\nexport const useCameraCapture = () => {\n  const capturePhoto = async () => {\n    // Use existing camera logic\n    // Return only URI - no analysis\n  }\n  \n  return {\n    capturePhoto,\n    isLoading,\n    error,\n    hasPermission\n  }\n}\n\n// useGalleryPicker.ts  \nexport const useGalleryPicker = () => {\n  const pickImage = async () => {\n    // Use existing gallery logic\n  }\n  \n  return { pickImage, isLoading, error }\n}\n\n// useFileUpload.ts\nexport const useFileUpload = () => {\n  const uploadFile = async (files: FileList) => {\n    // Handle PDFs, videos, images\n    // File validation and compression\n  }\n  \n  return { uploadFile, isLoading, error }\n}\n```\n\n**Integration Pattern:**\n\n```typescript\n// ChatInput.tsx\nconst ChatInput = () => {\n  const { capturePhoto } = useCameraCapture()\n  const { pickImage } = useGalleryPicker()\n  \n  return (\n    <div className=\"chat-input\">\n      <input type=\"text\" />\n      <button onClick={capturePhoto}>📷</button>\n      <button onClick={pickImage}>🖼️</button>\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  )\n}\n```\n\n**File Management:**\n\n- [ ] Image preview before sending\n- [ ] Multiple file selection (up to 4)\n- [ ] File type validation\n- [ ] Size limits and compression\n- [ ] Remove attached files option",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-41/mobile-102-extract-camera-logic-to-reusable-hooks",
      "createdAt": "2025-10-15T09:52:37.158Z",
      "updatedAt": "2025-10-15T09:52:37.158Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-40",
      "linearId": "a7f23a8f-4b98-49b1-9417-cd930ebdeed4",
      "title": "[MOBILE-101] Create thin client ChatScreen",
      "description": "**Objective:** Build chat-first UI that ONLY calls APIs (zero business logic)\n\n**Description:**\nReplace camera-first navigation with ChatGPT-style interface that matches the web app design, calling only APIs for all business logic.\n\n**Design Requirements:**\n\n- [ ] Match `ToddyAdviceChat.tsx` design exactly\n- [ ] AskToddy orange (#FF6B35) and navy (#2C3E50) colors\n- [ ] Message bubbles with gradients and shadows\n- [ ] Toddy avatar for assistant messages\n- [ ] User avatar for user messages\n- [ ] Professional enterprise appearance\n\n**Functionality:**\n\n- [ ] Real-time message interface\n- [ ] Conversation history persistence\n- [ ] Loading states with typing indicators\n- [ ] Error handling with retry options\n- [ ] Auto-scroll to latest message\n- [ ] Message timestamps\n- [ ] Copy message content functionality\n\n**API Integration:**\n\n```typescript\n// ONLY API calls - NO business logic\nconst handleSend = async () => {\n  const { data, error } = await supabase.functions.invoke('analyze-construction', {\n    body: { \n      message: input, \n      imageUri: attachedImage,\n      history: messages.slice(-6),\n      context: userContext\n    }\n  })\n  \n  if (data) {\n    setMessages(prev => [...prev, {\n      role: 'assistant',\n      content: data.response,\n      showDocumentButtons: data.canGenerateDocuments\n    }])\n  }\n}\n```\n\n**No Business Logic:**\n\n* ❌ No AI providers in frontend\n* ❌ No pricing calculations\n* ❌ No cost analysis\n* ❌ No document generation logic\n* ✅ Only UI state management\n* ✅ Only API calls and display",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-40/mobile-101-create-thin-client-chatscreen",
      "createdAt": "2025-10-15T09:52:35.910Z",
      "updatedAt": "2025-10-15T09:52:35.910Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-39",
      "linearId": "ce9ff666-4145-4a38-b309-19f7a12fbc99",
      "title": "[API-006] Add authentication and rate limiting",
      "description": "**Objective:** Secure APIs with authentication and usage quotas\n\n**Description:**\nImplement proper authentication, rate limiting, and usage tracking to prepare for freemium model.\n\n**Authentication:**\n\n- [ ] Supabase Auth integration with Edge Functions\n- [ ] JWT token validation\n- [ ] User session management\n- [ ] Guest user support (limited access)\n\n**Rate Limiting:**\n\n- [ ] Free tier: 10 analyses per day\n- [ ] Usage quota enforcement\n- [ ] Graceful quota exceeded handling\n- [ ] Reset timing (daily/monthly)\n\n**Database Schema:**\n\n```sql\n-- Usage tracking\nCREATE TABLE user_usage (\n  user_id UUID REFERENCES auth.users(id),\n  daily_count INT DEFAULT 0,\n  monthly_count INT DEFAULT 0,\n  plan_type TEXT DEFAULT 'free',\n  last_reset_daily TIMESTAMPTZ DEFAULT NOW(),\n  last_reset_monthly TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Analysis history  \nCREATE TABLE analyses (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  user_id UUID REFERENCES auth.users(id),\n  input_data JSONB,\n  result JSONB,\n  cost DECIMAL(10,4),\n  provider TEXT,\n  processing_time_ms INT,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n\n-- Pricing cache\nCREATE TABLE pricing_cache (\n  id UUID PRIMARY KEY DEFAULT gen_random_uuid(),\n  region TEXT,\n  category TEXT,\n  data JSONB,\n  expires_at TIMESTAMPTZ,\n  created_at TIMESTAMPTZ DEFAULT NOW()\n);\n```\n\n**Monitoring:**\n\n* Request logging and analytics\n* Error tracking with Sentry\n* Performance metrics\n* Cost tracking per user",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-39/api-006-add-authentication-and-rate-limiting",
      "createdAt": "2025-10-15T09:52:34.686Z",
      "updatedAt": "2025-10-15T09:52:34.686Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-38",
      "linearId": "5f6c489a-e5be-4f9c-a5da-3da6256d2131",
      "title": "[API-005] Implement document generation Edge Function",
      "description": "**Objective:** Generate professional PDF quotes, project plans, and task lists\n\n**Description:**\nCreate document generation service that produces professional, branded PDF documents from analysis results.\n\n**Document Types:**\n\n#### **PDF Quote Generation**\n\n- [ ] Detailed cost breakdown with line items\n- [ ] AskToddy branding and logo\n- [ ] VAT calculations and totals\n- [ ] Terms and conditions\n- [ ] Contact information\n- [ ] Professional formatting\n\n#### **Project Plan Timeline**\n\n- [ ] Gantt-style visual timeline\n- [ ] Phase breakdown with dependencies\n- [ ] Resource allocation\n- [ ] Milestone markers\n- [ ] Critical path highlighting\n- [ ] Risk assessments\n\n#### **Task List Generation**\n\n- [ ] Categorized task breakdown\n- [ ] Dependencies and prerequisites\n- [ ] Estimated durations\n- [ ] Skills required\n- [ ] Tools and materials needed\n- [ ] Safety considerations\n\n**API Contract:**\n\n```typescript\n// POST /generate-document\ninterface DocumentRequest {\n  type: 'quote' | 'timeline' | 'tasklist'\n  projectType: string\n  analysis: ProjectAnalysis\n  pricing: PricingResponse\n  userDetails?: {\n    name: string\n    email: string\n    address: string\n  }\n}\n\n// Response: PDF blob with proper headers\nContent-Type: application/pdf\nContent-Disposition: attachment; filename=\"project-quote-20250115.pdf\"\n```\n\n**Templates:**\n\n* Professional AskToddy branding\n* Consistent typography and colors\n* Mobile-optimized layouts\n* Print-friendly formatting\n\n**Technical Stack:**\n\n* Puppeteer for PDF generation\n* HTML/CSS templates\n* Dynamic data injection\n* Asset management (logos, fonts)",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-38/api-005-implement-document-generation-edge-function",
      "createdAt": "2025-10-15T09:52:33.386Z",
      "updatedAt": "2025-10-15T09:52:33.386Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-37",
      "linearId": "96a4777f-6f22-43fc-8036-9a3e83945ac6",
      "title": "[API-004] Add OpenAI provider for LLM switching",
      "description": "**Objective:** Enable provider switching (Gemini ↔ OpenAI) for best results\n\n**Description:**\nAdd OpenAI GPT-4 Vision as an alternative AI provider to compare results and choose the best performing model for different construction scenarios.\n\n**Acceptance Criteria:**\n\n- [ ] OpenAIProvider class implementing AIProvider interface\n- [ ] GPT-4 Vision integration for image analysis\n- [ ] GPT-4 text completion for text-only queries\n- [ ] Token usage tracking and cost calculation\n- [ ] Provider selection via request parameter\n- [ ] Performance comparison logging\n- [ ] Fallback chain: Primary → Secondary → Mock\n\n**Provider Configuration:**\n\n```typescript\ninterface ProviderConfig {\n  primary: 'gemini' | 'openai'\n  fallback: ('gemini' | 'openai' | 'mock')[]\n  models: {\n    gemini: 'gemini-2.0-flash-exp' | 'gemini-pro-vision'\n    openai: 'gpt-4-vision-preview' | 'gpt-4o'\n  }\n}\n```\n\n**Cost Tracking:**\n\n```typescript\ninterface UsageMetrics {\n  provider: string\n  model: string\n  inputTokens: number\n  outputTokens: number\n  cost: number\n  responseTime: number\n  timestamp: string\n}\n```\n\n**A/B Testing Support:**\n\n* Route 50% of requests to each provider\n* Compare accuracy, speed, cost\n* Log results for analysis\n* Configurable routing rules",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-37/api-004-add-openai-provider-for-llm-switching",
      "createdAt": "2025-10-15T09:52:32.193Z",
      "updatedAt": "2025-10-15T09:52:32.193Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-36",
      "linearId": "2a5f82eb-744f-4fa0-af1a-90fb9b2bd34e",
      "title": "[API-003] Build comprehensive UK pricing Edge Function",
      "description": "**Objective:** Create complete UK construction pricing services in middleware\n\n**Description:**\nBuild comprehensive pricing intelligence covering all UK construction costs - tools, materials, aggregates, and labour - to provide accurate market-rate quotes.\n\n**Services to Implement:**\n\n#### **ToolHireService**\n\n- [ ] HSS Hire rates scraping (daily updates)\n- [ ] Speedy Hire rates (API or scraping)\n- [ ] Local hire shop integration\n- [ ] Tool category classification\n- [ ] Regional availability checking\n\n#### **MaterialsService**\n\n- [ ] Screwfix pricing integration\n- [ ] B&Q rates (scraping)\n- [ ] Travis Perkins trade prices\n- [ ] Material category mapping\n- [ ] Bulk pricing calculations\n\n#### **AggregateService**\n\n- [ ] Sand and gravel supplier rates\n- [ ] Concrete pricing by mix type\n- [ ] Delivery cost calculations\n- [ ] Regional supplier networks\n- [ ] Volume discount structures\n\n#### **LabourService**\n\n- [ ] ONS construction wage data integration\n- [ ] Regional multipliers (London +25%, etc.)\n- [ ] Trade-specific rates (carpenter, electrician, etc.)\n- [ ] Skill level variations\n- [ ] Seasonal demand adjustments\n\n**Technical Implementation:**\n\n```typescript\n// API Endpoint: POST /get-pricing\ninterface PricingRequest {\n  location: string\n  projectType: string\n  materials?: string[]\n  tools?: string[]\n  timeline?: string\n}\n\ninterface PricingResponse {\n  toolHire: ToolHireRate[]\n  materials: MaterialPrice[]\n  aggregates: AggregateRate[]\n  labour: LabourRate[]\n  contextFactors: {\n    regionMultiplier: number\n    seasonalMultiplier: number\n    demandIndex: number\n  }\n  recommendations: PricingRecommendation[]\n  lastUpdated: string\n}\n```\n\n**Data Sources:**\n\n* HSS Hire API/scraping\n* Screwfix product API\n* ONS construction statistics\n* BCIS building cost data\n* Regional supplier databases\n\n**Caching Strategy:**\n\n* Redis/Supabase cache with 4-hour TTL\n* Daily batch updates for stable pricing\n* Real-time updates for volatile items\n* Regional cache segmentation",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 8,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-36/api-003-build-comprehensive-uk-pricing-edge-function",
      "createdAt": "2025-10-15T09:52:30.991Z",
      "updatedAt": "2025-10-15T09:52:30.991Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-35",
      "linearId": "3055f1a4-5403-4f0f-a9c2-002fddc6a664",
      "title": "[API-002] Migrate AIMiddleware to analyze-construction Edge Function",
      "description": "**Objective:** Move ALL AI logic from mobile app to Supabase Edge Function\n\n**Description:**\nTransfer the complete AIMiddleware system (455 lines) from mobile to server-side to eliminate technical debt and enable proper API-first architecture.\n\n**Files to Migrate:**\n\n* `src/services/ai/AIMiddleware.ts` → `supabase/functions/analyze-construction/middleware.ts`\n* `src/services/ai/providers/GeminiProvider.ts` → `supabase/functions/analyze-construction/providers/gemini.ts`\n* `src/services/ai/types.ts` → `supabase/functions/analyze-construction/types.ts`\n\n**Acceptance Criteria:**\n\n- [ ] AIMiddleware class working in Deno environment\n- [ ] Provider registration system functional\n- [ ] Gemini provider integrated with API key from environment\n- [ ] Mock provider available for development\n- [ ] Timeout handling (30 seconds)\n- [ ] Error handling and fallback logic\n- [ ] Health check endpoint: `GET /analyze-construction/health`\n- [ ] Main analysis endpoint: `POST /analyze-construction`\n\n**API Contract:**\n\n```typescript\n// Request\ninterface AnalysisRequest {\n  imageUri?: string\n  message?: string\n  context?: {\n    projectType?: string\n    location?: string\n    budgetRange?: { min: number; max: number }\n  }\n  history?: Message[]\n}\n\n// Response  \ninterface AnalysisResponse {\n  projectType: string\n  description: string\n  costBreakdown: CostBreakdown\n  timeline: Timeline\n  recommendations: string[]\n  confidence: number\n  aiProvider: string\n  processingTimeMs: number\n}\n```\n\n**Testing:**\n\n* Unit tests for middleware functions\n* Integration test with real Gemini API\n* Error handling scenarios\n* Performance benchmarks",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-35/api-002-migrate-aimiddleware-to-analyze-construction-edge-function",
      "createdAt": "2025-10-15T09:52:29.588Z",
      "updatedAt": "2025-10-15T09:52:29.588Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-34",
      "linearId": "e88ab011-92b4-446c-a64c-837a40ff89e9",
      "title": "[API-001] Set up Supabase Edge Functions infrastructure",
      "description": "**Objective:** Initialize Supabase functions structure for all business logic\n\n**Description:**\nSet up the foundation for housing ALL business logic in Supabase Edge Functions to prevent frontend technical debt.\n\n**Acceptance Criteria:**\n\n- [ ] `supabase/functions/analyze-construction/` directory created\n- [ ] `supabase/functions/get-pricing/` directory created\n- [ ] `supabase/functions/generate-document/` directory created\n- [ ] TypeScript configuration for Deno environment\n- [ ] Environment variables configured (GEMINI_API_KEY, OPENAI_API_KEY)\n- [ ] Local development server running with `supabase functions serve`\n- [ ] Basic \"hello world\" endpoints responding\n\n**Technical Notes:**\n\n```bash\n# Commands to run:\nsupabase functions new analyze-construction\nsupabase functions new get-pricing\nsupabase functions new generate-document\n```\n\n**Definition of Done:**\n\n* All three Edge Functions respond to basic requests\n* TypeScript compilation working\n* Environment variables accessible\n* Local development workflow established",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-34/api-001-set-up-supabase-edge-functions-infrastructure",
      "createdAt": "2025-10-15T09:52:28.069Z",
      "updatedAt": "2025-10-15T09:52:28.069Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-24",
      "linearId": "c680970b-fc8c-4b23-ac96-43a91ba9f4e1",
      "title": "Set up authentication system (free tier MVP)",
      "description": "✅ COMPLETED\n\n## Implemented:\n\n* Supabase authentication integration using shared backend\n* AuthContext for global authentication state management\n* Sign in/sign up screens with proper validation\n* Authentication-aware navigation (AuthNavigator)\n* Free tier user registration with metadata\n* Session persistence and automatic refresh\n* Proper error handling with user-friendly messages\n* Placeholder screens for testing navigation flow\n\n## Features:\n\n* Email/password authentication\n* Form validation (email format, password strength)\n* Loading states and error feedback\n* Automatic navigation based on auth state\n* Session management with Supabase\n* Free tier user tagging\n\n## Files Created:\n\n* /src/services/supabase.ts - Supabase client and auth helpers\n* /src/contexts/AuthContext.tsx - Authentication state management\n* /src/navigation/AuthNavigator.tsx - Auth-aware routing\n* .env - Environment variables for Supabase\n* Updated LoginScreen and HomeScreen with real auth\n\nReady for camera component implementation.",
      "status": "Done",
      "stateType": "completed",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-24/set-up-authentication-system-free-tier-mvp",
      "createdAt": "2025-10-14T12:40:43.228Z",
      "updatedAt": "2025-10-14T13:43:30.521Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-30",
      "linearId": "99f73fcb-2004-4254-9dc2-09e4c8a431dd",
      "title": "Create UI components matching web app design system",
      "description": "✅ COMPLETED\n\n## Implemented:\n\n* Complete design system with AskToddy orange/navy theme\n* Reusable UI components (Button, Input, Card)\n* Splash screen with branding\n* Login/registration screens with free tier messaging\n* Updated HomeScreen with new design\n* Proper navigation flow (Splash → Login → Home)\n* Responsive design for various screen sizes\n* Typography and color system matching web app\n\n## Files Created:\n\n* /src/styles/designTokens.ts\n* /src/components/ui/Button.tsx\n* /src/components/ui/Input.tsx\n* /src/components/ui/Card.tsx\n* /src/screens/SplashScreen.tsx\n* /src/screens/LoginScreen.tsx\n* Updated HomeScreen and App.tsx\n\nReady for authentication system implementation.",
      "status": "Done",
      "stateType": "completed",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-30/create-ui-components-matching-web-app-design-system",
      "createdAt": "2025-10-14T13:18:36.153Z",
      "updatedAt": "2025-10-14T13:29:17.655Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-33",
      "linearId": "46898965-9d80-4ce8-b91c-0e35600ede1c",
      "title": "Add user feedback system for quote refinement",
      "description": "Allow users to provide feedback on quotes and regenerate with specific rates.\n\n## Acceptance Criteria\n\n- [ ] Create feedback interface on quote results\n- [ ] Allow users to adjust material preferences\n- [ ] Enable labor rate customization\n- [ ] Add tool hire preference selection\n- [ ] Implement quote regeneration with user inputs\n- [ ] Store user preferences for future quotes\n- [ ] Add feedback collection for AI training",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-33/add-user-feedback-system-for-quote-refinement",
      "createdAt": "2025-10-14T13:22:41.856Z",
      "updatedAt": "2025-10-14T13:22:41.856Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-32",
      "linearId": "3eaa8ece-a5c4-4756-bb61-d6c6984b1c2c",
      "title": "Implement context-aware pricing system",
      "description": "Build middleware to incorporate real-time pricing data for accurate quotes.\n\n## Acceptance Criteria\n\n- [ ] Integrate tool hire rates data\n- [ ] Add material pricing data\n- [ ] Include aggregate rates\n- [ ] Incorporate labor rates by region\n- [ ] Create pricing data management system\n- [ ] Implement real-time rate updates\n- [ ] Add fallback pricing when data unavailable\n- [ ] Create pricing configuration interface",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-32/implement-context-aware-pricing-system",
      "createdAt": "2025-10-14T13:22:10.620Z",
      "updatedAt": "2025-10-14T13:22:10.620Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-31",
      "linearId": "123d5b14-ada7-4ef6-b094-fd7b0f018e54",
      "title": "Build AI-agnostic middleware for quote generation",
      "description": "Create flexible middleware that can work with multiple AI providers (Gemini, OpenAI, etc).\n\n## Acceptance Criteria\n\n- [ ] Design AI provider interface/abstraction\n- [ ] Implement Gemini provider\n- [ ] Add OpenAI provider support\n- [ ] Create provider switching mechanism\n- [ ] Handle provider-specific formatting\n- [ ] Implement fallback logic\n- [ ] Add configuration for provider selection",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-31/build-ai-agnostic-middleware-for-quote-generation",
      "createdAt": "2025-10-14T13:21:51.282Z",
      "updatedAt": "2025-10-14T13:21:51.282Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-29",
      "linearId": "8f67e903-ea1f-48d2-ac9e-0676bc30eaf2",
      "title": "Test end-to-end flow and finalize MVP",
      "description": "Complete end-to-end testing of the mobile app and prepare for launch.\n\n## Acceptance Criteria\n\n- [ ] Test complete user flow (camera → analysis → results)\n- [ ] Verify all error handling scenarios\n- [ ] Test on multiple devices/screen sizes\n- [ ] Performance testing and optimization\n- [ ] Final UI/UX polish\n- [ ] Beta testing with real users\n- [ ] Bug fixes and improvements\n- [ ] Prepare for production release",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-29/test-end-to-end-flow-and-finalize-mvp",
      "createdAt": "2025-10-14T13:11:33.577Z",
      "updatedAt": "2025-10-14T13:11:33.577Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-28",
      "linearId": "f05b4dc5-7499-4145-a1d6-b20b1b18b579",
      "title": "Configure app for TestFlight deployment",
      "description": "Set up mobile app for TestFlight distribution and App Store deployment.\n\n## Acceptance Criteria\n\n- [ ] Configure EAS Build for iOS\n- [ ] Set up proper app signing\n- [ ] Configure app metadata (icons, splash screens)\n- [ ] Test build process\n- [ ] Upload to TestFlight\n- [ ] Set up beta testing group",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-28/configure-app-for-testflight-deployment",
      "createdAt": "2025-10-14T13:09:59.504Z",
      "updatedAt": "2025-10-14T13:09:59.504Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-27",
      "linearId": "9e4d3caf-7872-448d-af0f-563b5c61be46",
      "title": "Connect mobile app to Supabase Gemini analysis API",
      "description": "Integrate mobile app with existing Supabase backend for AI-powered construction analysis.\n\n## Acceptance Criteria\n\n- [ ] Upload images to Supabase storage\n- [ ] Call Gemini analysis API endpoint\n- [ ] Handle image preprocessing (convert to base64)\n- [ ] Implement proper error handling\n- [ ] Add loading states\n- [ ] Parse and display API responses",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-27/connect-mobile-app-to-supabase-gemini-analysis-api",
      "createdAt": "2025-10-14T13:09:48.193Z",
      "updatedAt": "2025-10-14T13:09:48.193Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-26",
      "linearId": "625d3cca-4e39-477f-ad54-93d80a92f70b",
      "title": "Create analysis results screen",
      "description": "Build results screen to display construction project quotes and analysis from AI.\n\n## Acceptance Criteria\n\n- [ ] Display captured image\n- [ ] Show loading state during analysis\n- [ ] Display quote breakdown (materials, labor, total)\n- [ ] Show timeline estimates\n- [ ] Display tool recommendations\n- [ ] Error handling for API failures\n- [ ] Option to retake photo or analyze another project",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-26/create-analysis-results-screen",
      "createdAt": "2025-10-14T12:41:48.052Z",
      "updatedAt": "2025-10-14T12:41:48.052Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-25",
      "linearId": "3bb69c4b-f51c-49d6-8b29-1616fb00b3aa",
      "title": "Build MVP camera component for image capture",
      "description": "Create camera screen with photo capture functionality for construction project analysis.\n\n## Acceptance Criteria\n\n- [ ] Camera view with live preview\n- [ ] Photo capture functionality\n- [ ] Gallery picker integration\n- [ ] Proper permission handling\n- [ ] Error handling for camera failures\n- [ ] Navigation to results screen with captured image",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-25/build-mvp-camera-component-for-image-capture",
      "createdAt": "2025-10-14T12:41:09.321Z",
      "updatedAt": "2025-10-14T12:41:09.321Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-23",
      "linearId": "724f83a4-54a9-4eea-8dea-c25264a81f7e",
      "title": "Set up Expo React Native project with TypeScript",
      "description": "✅ COMPLETED\n\n* Created fresh asktoddy-mobile directory\n* Initialized Expo with TypeScript template\n* Configured app.json with proper bundle IDs and camera permissions\n* Set up Git repository\n* Installed navigation, camera, and Supabase packages",
      "status": "Done",
      "stateType": "completed",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-23/set-up-expo-react-native-project-with-typescript",
      "createdAt": "2025-10-14T12:38:16.302Z",
      "updatedAt": "2025-10-14T12:38:16.302Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-13",
      "linearId": "a8516727-b36a-402a-98f2-c53081c9d724",
      "title": "🔄 Extract business logic from Next.js to Supabase Functions",
      "description": "## ARCHITECTURE UPDATE: Supabase Edge Functions ✅\n\n## Objective\n\nExtract and port business logic from Next.js API routes to Supabase Edge Functions.\n\n## Why Supabase Edge Functions?\n\n- ✅ Better integration with existing Supabase infrastructure\n- ✅ Global edge deployment for performance\n- ✅ TypeScript/Deno runtime (not Node.js)\n- ✅ Built-in auth and database access\n\n## Current Next.js Locations to Extract\n\n- /app/api/analyze/ → `gemini-analysis` function ✅ Started\n- /app/api/chat/ → `chat` function (placeholder created)\n- /app/api/pricing/ → `construction-pricing` function ✅ Started\n\n## Tasks\n\n- [ ] Extract GeminiService logic from Next.js analyze route\n- [ ] Port PricingService logic to construction-pricing function\n- [ ] Extract chat logic and conversation handling\n- [ ] Port tool hire business logic\n- [ ] Add Contentful integration for pricing data\n- [ ] Implement proper error handling and logging\n\n## Business Logic to Port\n\n- AI prompt engineering and image analysis\n- Cost calculation algorithms\n- UK pricing data processing\n- Tool recommendation logic\n- Safety requirement databases\n\n## Dependencies\n\n- ✅ Supabase Edge Functions created\n- [ ] Environment variables configured in Supabase\n- [ ] GEMINI_API_KEY added to Supabase secrets\n\nThis task now focuses on Supabase/Deno instead of NestJS/Node.js.",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 8,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-13/extract-business-logic-from-nextjs-to-supabase-functions",
      "createdAt": "2025-10-13T10:02:57.847Z",
      "updatedAt": "2025-10-13T12:17:54.963Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-12",
      "linearId": "3a51eee4-67aa-492c-b442-284d1f810d7a",
      "title": "🔌 Set up Supabase Edge Functions API ✅ COMPLETED",
      "description": "## ✅ COMPLETED - Supabase Edge Functions API Layer\n\n## Architecture Decision: Supabase Edge Functions ✅\n\nChose Supabase over NestJS for better integration with existing infrastructure.\n\n## Why Supabase Edge Functions?\n\n* ✅ Already using Supabase database\n* ✅ Built-in auth integration\n* ✅ Global edge deployment\n* ✅ TypeScript/Deno runtime\n* ✅ Single ecosystem, lower costs\n\n## Completed API Endpoints\n\n* `/functions/v1/gemini-analysis` - AI construction analysis\n* `/functions/v1/construction-pricing` - UK materials and labor rates\n* `/functions/v1/tool-hire` - Tool rental recommendations\n* `/functions/v1/chat` - AI conversational interface\n\n## Features Implemented\n\n* ✅ CORS handling for mobile app integration\n* ✅ TypeScript interfaces and validation\n* ✅ Error handling and logging\n* ✅ Mock UK pricing data (Travis Perkins, Wickes, Selco)\n* ✅ Labor rates by region and trade\n* ✅ Environment configuration structure\n\n## Repository Structure\n\n```\n/supabase/functions/\n├── _shared/cors.ts        # CORS utilities\n├── gemini-analysis/       # AI analysis endpoint\n├── construction-pricing/  # UK pricing data API\n├── tool-hire/            # Tool hire recommendations\n└── chat/                 # Chat interface\n```\n\n## Ready For\n\n* Mobile app integration\n* Production deployment to Supabase\n* Environment variable configuration\n\nNext: Connect mobile app to these APIs and extract business logic from web app.",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-12/set-up-supabase-edge-functions-api-completed",
      "createdAt": "2025-10-13T10:02:57.071Z",
      "updatedAt": "2025-10-13T12:17:54.534Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-6",
      "linearId": "5defe182-468a-444c-abdd-3cd5725881bd",
      "title": "📦 Create monorepo structure for shared code ✅ COMPLETED",
      "description": "## ✅ COMPLETED\n\nMonorepo structure successfully created.\n\n## Completed Structure\n\n```\nasktoddy-platform/\n├── apps/\n│   └── mobile/         # React Native app\n├── packages/\n│   ├── shared-services/ # Business logic\n│   └── shared-types/    # TypeScript types\n```\n\n## Completed Tasks\n\n* ✅ Set up workspace structure (apps/, packages/)\n* ✅ Configure shared TypeScript configurations\n* ✅ Set up package.json workspaces\n* ✅ Create shared-types package structure\n* ✅ Create business-logic package structure\n\n## Ready For\n\n* Mobile development\n* Shared service integration\n* API middleware development",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-6/create-monorepo-structure-for-shared-code-completed",
      "createdAt": "2025-10-13T10:02:51.581Z",
      "updatedAt": "2025-10-13T11:11:19.016Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-5",
      "linearId": "cbcf2e6e-b7e0-4f52-bc3e-86d925a1f13e",
      "title": "🏗️ Set up React Native project with Expo ✅ COMPLETED",
      "description": "## ✅ COMPLETED\n\nMonorepo structure created at /Users/olivertodd/asktoddy-platform\n\n## Completed Tasks\n\n* ✅ Initialize Expo project with TypeScript template\n* ✅ Configure TypeScript with strict mode\n* ✅ Set up ESLint and Prettier\n* ✅ Configure Jest for testing\n* ✅ Set up folder structure matching web app patterns\n* ✅ Create monorepo with workspaces\n\n## Success Criteria Met\n\n* ✅ Project runs on development server\n* ✅ TypeScript compilation works\n* ✅ Ready for shared package integration\n\nReady to proceed with middleware API setup (ASK-12).",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-5/set-up-react-native-project-with-expo-completed",
      "createdAt": "2025-10-13T10:02:50.801Z",
      "updatedAt": "2025-10-13T11:11:18.712Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-11",
      "linearId": "9446f32f-adf4-42c1-ae13-0e37d80eab04",
      "title": "📍 Port SmartLocationService to mobile (with GPS)",
      "description": "## ARCHITECTURE UPDATE: Mobile-First for Privacy ✅\n\n## Objective\n\nPort location services directly to mobile app for GPS integration and privacy.\n\n## Why Mobile Direct?\n\n* ✅ Needs mobile GPS permissions anyway\n* ✅ Location processing can be local\n* ✅ Privacy-friendly (location stays on device)\n* ✅ Better offline capability\n\n## Current Location (Web App)\n\n/lib/location/smart-location.service.ts\n\n## Tasks\n\n- [ ] Port UK location detection logic to mobile\n- [ ] Integrate React Native geolocation\n- [ ] Add location permission handling\n- [ ] Port supplier recommendation logic\n- [ ] Test on both iOS and Android\n- [ ] Add offline location caching\n\n## Mobile Dependencies\n\n* expo-location for GPS access\n* AsyncStorage for location caching\n* iOS/Android permission handling\n\n## Value\n\nLocation-based recommendations with full privacy control",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-11/port-smartlocationservice-to-mobile-with-gps",
      "createdAt": "2025-10-13T10:02:56.237Z",
      "updatedAt": "2025-10-13T11:11:18.365Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-9",
      "linearId": "cdec7d1f-07bb-468d-9960-bfde6a621343",
      "title": "🛠️ Port ToolExpertiseService to mobile (offline)",
      "description": "## ARCHITECTURE UPDATE: Mobile-First for Offline Use ✅\n\n## Objective\n\nPort tool expertise knowledge directly to mobile app for instant offline access.\n\n## Why Mobile Direct?\n\n* ✅ Static knowledge base - perfect for offline use\n* ✅ No API calls needed - instant responses\n* ✅ 1,770 lines of pure domain knowledge\n* ✅ Better user experience (no network dependency)\n\n## Current Location (Web App)\n\n/lib/tools/tool-expertise.service.ts\n\n## Tasks\n\n- [ ] Copy ToolExpertiseService to shared-services package\n- [ ] Create searchable interface for mobile\n- [ ] Optimize for mobile performance\n- [ ] Add offline caching with AsyncStorage\n- [ ] Create tool recommendation engine\n- [ ] Build tool search and filtering\n\n## Mobile Integration\n\n* Import directly in mobile app\n* Store in AsyncStorage for fast access\n* Enable offline tool recommendations\n\n## Value\n\nGold mine of domain expertise - critical competitive advantage that works without internet",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-9/port-toolexpertiseservice-to-mobile-offline",
      "createdAt": "2025-10-13T10:02:54.629Z",
      "updatedAt": "2025-10-13T11:11:17.850Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-8",
      "linearId": "891922d6-b039-4190-938a-2b80de6f1e76",
      "title": "🔨 Build ConstructionDataService API endpoints",
      "description": "## ARCHITECTURE UPDATE: API-First Approach ✅\n\n## Objective\n\nCreate NestJS API endpoints for UK construction pricing data (moved from direct mobile integration for performance and updates).\n\n## Why API Layer?\n\n* ✅ Large datasets better served from API\n* ✅ Enable pricing updates without app releases\n* ✅ Add caching and CDN support\n* ✅ Real-time pricing synchronization\n\n## Current Location (Web App)\n\n/lib/construction-data/construction-data.service.ts\n\n## Tasks\n\n- [ ] Extract construction data to NestJS service\n- [ ] Create /api/pricing endpoints\n- [ ] Implement data caching strategy\n- [ ] Add real-time pricing updates\n- [ ] Create search and filtering endpoints\n\n## API Endpoints to Create\n\n* GET /api/pricing/materials - Get material costs\n* GET /api/pricing/labor - Get labor rates by region\n* GET /api/pricing/categories - Get pricing categories\n* GET /api/pricing/search - Search pricing data\n\n## Dependencies\n\n* Requires ASK-12 (NestJS setup) to be completed first\n\n## Value\n\nEssential UK market data - 100% reusable with better performance",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-8/build-constructiondataservice-api-endpoints",
      "createdAt": "2025-10-13T10:02:53.587Z",
      "updatedAt": "2025-10-13T11:11:17.469Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-7",
      "linearId": "f18ee181-3159-4851-9c4d-290dc44e63b9",
      "title": "🤖 Build GeminiService API endpoints",
      "description": "## ARCHITECTURE UPDATE: API-First Approach ✅\n\n## Objective\n\nCreate NestJS API endpoints for Google Gemini AI service (moved from direct mobile integration for security and performance).\n\n## Why API Layer?\n\n* ✅ Keep API keys secure on server\n* ✅ Enable rate limiting and caching\n* ✅ Heavy AI processing on backend\n* ✅ Better error handling\n\n## Current Location (Web App)\n\n/lib/ai/gemini.service.ts\n\n## Tasks\n\n- [ ] Extract GeminiService to NestJS controller\n- [ ] Create /api/analysis endpoints\n- [ ] Add image upload handling\n- [ ] Implement error handling and validation\n- [ ] Add rate limiting for AI calls\n- [ ] Cache common analysis results\n\n## API Endpoints to Create\n\n* POST /api/analysis/image - Upload and analyze construction images\n* POST /api/chat/message - AI chat responses\n* GET /api/analysis/:id - Get analysis results\n\n## Dependencies\n\n* Requires ASK-12 (NestJS setup) to be completed first\n\n## Value\n\nCore AI differentiator - enables secure AI-powered construction analysis",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-7/build-geminiservice-api-endpoints",
      "createdAt": "2025-10-13T10:02:52.251Z",
      "updatedAt": "2025-10-13T11:11:17.183Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-22",
      "linearId": "ebf09e38-cb68-4556-ad14-52e8a7144ed0",
      "title": "🌐 Deploy current web app to Vercel",
      "description": "## Objective\n\nDeploy the existing Next.js app for immediate user testing.\n\n## Tasks\n\n- [ ] Set up Vercel project\n- [ ] Configure environment variables\n- [ ] Set up custom domain\n- [ ] Configure Sentry error tracking\n- [ ] Set up analytics\n- [ ] Test all features in production\n\n## Purpose\n\nKeep web app running while building mobile MVP",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-22/deploy-current-web-app-to-vercel",
      "createdAt": "2025-10-13T10:03:04.896Z",
      "updatedAt": "2025-10-13T10:03:04.896Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-21",
      "linearId": "74c5e011-e023-4dba-b9c1-26708e72ea4d",
      "title": "🚀 Deploy MVP to TestFlight/Google Play Beta",
      "description": "## Objective\n\nDeploy the mobile MVP for testing with friends and family.\n\n## Tasks\n\n- [ ] Configure app signing\n- [ ] Set up CI/CD pipeline\n- [ ] Deploy to TestFlight (iOS)\n- [ ] Deploy to Google Play Beta (Android)\n- [ ] Set up crash reporting\n- [ ] Configure analytics\n\n## Success\n\nFriends and family can test the app",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-21/deploy-mvp-to-testflightgoogle-play-beta",
      "createdAt": "2025-10-13T10:03:04.109Z",
      "updatedAt": "2025-10-13T10:03:04.109Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-20",
      "linearId": "5a0af639-d90a-4c22-aed1-3ba6f63cbff7",
      "title": "✅ End-to-end testing of core flows",
      "description": "## Objective\n\nTest complete user journeys on mobile.\n\n## Test Flows\n\n- [ ] Photo upload → Analysis → Results\n- [ ] Chat interaction flow\n- [ ] Project creation and management\n- [ ] Tool hire inquiry flow\n- [ ] Offline/online synchronization\n\n## Platforms\n\nTest on iOS and Android",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-20/end-to-end-testing-of-core-flows",
      "createdAt": "2025-10-13T10:03:03.309Z",
      "updatedAt": "2025-10-13T10:03:03.309Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-19",
      "linearId": "a3bd8409-65f1-418d-b41f-5cddca4685a2",
      "title": "🔗 Connect mobile app to middleware API",
      "description": "## Objective\n\nIntegrate React Native app with NestJS API.\n\n## Tasks\n\n- [ ] Configure API client\n- [ ] Add request interceptors\n- [ ] Implement error handling\n- [ ] Add retry logic\n- [ ] Configure offline queue\n- [ ] Add API response caching",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-19/connect-mobile-app-to-middleware-api",
      "createdAt": "2025-10-13T10:03:02.626Z",
      "updatedAt": "2025-10-13T10:03:02.626Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-18",
      "linearId": "15b00b38-b2b4-4f69-b730-b74368a7d6ce",
      "title": "🏗️ Build project management screens",
      "description": "## Objective\n\nCreate screens for managing construction projects.\n\n## Screens\n\n- [ ] Project list view\n- [ ] Project detail view\n- [ ] Create/edit project forms\n- [ ] Project timeline view\n- [ ] Budget tracking view\n- [ ] Document management\n\n## Data\n\nIntegrate with Supabase",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 8,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-18/build-project-management-screens",
      "createdAt": "2025-10-13T10:03:01.929Z",
      "updatedAt": "2025-10-13T10:03:01.929Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-17",
      "linearId": "098486bd-7b75-4e07-ba1a-cad6944dad64",
      "title": "💬 Implement chat interface",
      "description": "## Objective\n\nBuild mobile chat UI for AI assistant.\n\n## Features\n\n- [ ] Message bubbles UI\n- [ ] Typing indicators\n- [ ] Image attachment support\n- [ ] Quick action buttons\n- [ ] Message history\n- [ ] Offline message queue\n\n## Integration\n\nConnect to GeminiService",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-17/implement-chat-interface",
      "createdAt": "2025-10-13T10:03:01.121Z",
      "updatedAt": "2025-10-13T10:03:01.121Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-16",
      "linearId": "48e246ed-01e2-49fe-b6d7-3884396fb5da",
      "title": "📊 Create analysis results screen",
      "description": "## Objective\n\nBuild mobile UI for displaying construction analysis results.\n\n## Features\n\n- [ ] Display AI analysis results\n- [ ] Show cost breakdowns\n- [ ] Display material lists\n- [ ] Show tool recommendations\n- [ ] Add sharing functionality\n- [ ] Implement offline viewing\n\n## Design\n\nAdapt web AnalysisResults.tsx for mobile",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-16/create-analysis-results-screen",
      "createdAt": "2025-10-13T10:03:00.393Z",
      "updatedAt": "2025-10-13T10:03:00.393Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-15",
      "linearId": "d9b865cd-9d84-48fd-a6c7-a9819f1e4e73",
      "title": "📸 Build camera/image picker component",
      "description": "## Objective\n\nCreate React Native component for photo capture and selection.\n\n## Requirements\n\n- [ ] Implement expo-image-picker\n- [ ] Add camera permissions handling\n- [ ] Support multiple image selection\n- [ ] Add image preview and editing\n- [ ] Compress images for upload\n- [ ] Handle iOS and Android differences\n\n## Replaces\n\nWeb FileUpload component",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-15/build-cameraimage-picker-component",
      "createdAt": "2025-10-13T10:02:59.667Z",
      "updatedAt": "2025-10-13T10:02:59.667Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-14",
      "linearId": "a167bcfc-ef4f-4af1-a5c5-6f1141abbffb",
      "title": "🔐 Implement authentication layer",
      "description": "## Objective\n\nAdd authentication for both web and mobile clients.\n\n## Tasks\n\n- [ ] Set up JWT authentication\n- [ ] Configure Supabase Auth integration\n- [ ] Add role-based access control\n- [ ] Implement refresh token logic\n- [ ] Add rate limiting\n\n## Security\n\nCritical for production deployment",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-14/implement-authentication-layer",
      "createdAt": "2025-10-13T10:02:58.838Z",
      "updatedAt": "2025-10-13T10:02:58.838Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-10",
      "linearId": "bb88e4ba-1916-4796-a27a-1475a94c0267",
      "title": "💰 Port ToddyToolHireService",
      "description": "## Objective\n\nPort the tool hire pricing and inventory system.\n\n## Current Location\n\n/lib/pricing/toddy-tool-hire.service.ts\n\n## Tasks\n\n- [ ] Extract tool hire data\n- [ ] Port pricing logic\n- [ ] Port inventory management\n- [ ] Add local caching for offline use\n\n## Value\n\nComplete tool rental system - unique to AskToddy",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-10/port-toddytoolhireservice",
      "createdAt": "2025-10-13T10:02:55.480Z",
      "updatedAt": "2025-10-13T10:02:55.480Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-2",
      "linearId": "fc12f23b-a98f-4aa8-9f4c-7ea8d541fa68",
      "title": "Set up your teams (2)",
      "description": "This workspace is a container for your organization’s work. \n\n* [Learn more about Workspaces](https://linear.app/docs/workspaces)\n  How to configure settings and workflows \n\nTeams are how you organize people and work in Linear.\n\n* [Learn about Teams](https://linear.app/docs/teams)\n  How to structure teams and configure workflows\n\nTeams are made of members with defined roles (Admin, Member, Guest).\n\n* [Learn more about Members](https://linear.app/docs/invite-members)\n  Add your team and assign roles\n\n---\n\nReady to add your team? Invite via CSV or a unique link in [settings](http://linear.app/settings/members).",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-2/set-up-your-teams-2",
      "createdAt": "2025-10-13T09:20:50.906Z",
      "updatedAt": "2025-10-13T09:20:50.906Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-1",
      "linearId": "9977a047-f73f-4d8d-a36a-ac6d09a49824",
      "title": "Get familiar with Linear (1)",
      "description": "Welcome to Linear! \n\nWatch an introductory video and access a list of resources below.\n\n[LinearH264Version.mp4](https://uploads.linear.app/fe63b3e2-bf87-46c0-8784-cd7d639287c8/923e2801-e5f2-4055-9b27-1541f27e3365/44ab081a-253a-4ccf-8d3d-2547ac09b986)\n\n### **Choose your setup guide** based on your company stage:\n\n* [Small teams](https://linear.app/docs/how-to-use-linear-small-teams)\n  For early-stage startups and projects\n* [Startups & mid-size companies](https://linear.app/docs/how-to-use-linear-startups-mid-size-companies)\n  For growing teams with cross-functional needs\n* [Large & scaling companies](https://linear.app/docs/how-to-use-linear-large-scaling-companies)\n  For enterprise and high-growth teams with complex workflows\n\n### **Need help getting started?**\n\n* [Join our Slack community](https://linear.app/join-slack)\n  Connect with other Linear users and get tips\n* [Join a live ](https://lu.ma/welcome-to-linear?utm_source=docs)[onboarding](https://lu.ma/welcome-to-linear?utm_source=onboarding)[ ](https://lu.ma/welcome-to-linear?utm_source=docs)[session](https://lu.ma/welcome-to-linear?utm_source=onboarding)\n  Learn the essentials and see demos of core workflows\n\n---\n\nIf you have any questions hit `?` in the bottom left > Contact us.\n\n![contactlinear (1).gif](https://uploads.linear.app/fe63b3e2-bf87-46c0-8784-cd7d639287c8/bc9bbf62-4192-411f-88f6-c89c9150503e/4df0346e-803b-4f58-8527-4aeb30d88411)",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-1/get-familiar-with-linear-1",
      "createdAt": "2025-10-13T09:20:50.906Z",
      "updatedAt": "2025-10-13T09:20:50.906Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-4",
      "linearId": "21625cd1-5d5b-4592-ab21-9037e5153cc9",
      "title": "Import your data (4)",
      "description": "Sync data between Linear and your other tools.\n\n![import-your-data.png](https://uploads.linear.app/fe63b3e2-bf87-46c0-8784-cd7d639287c8/80d7e050-dd1f-4d4f-8257-b29c16087017/65c16454-30f3-4f4a-8f25-c2428d64ff57)\n\nWhether you're exploring Linear, running a pilot, or ready for full migration, we’ve got you covered. \n\n### **Exploring Linear:**\n\n* [**Pitch Linear**](https://linear.app/switch/pitch-guide)\n  Build your business case and get organizational buy-in\n* [**Run a pilot**](https://linear.app/switch/pilot-guide)\n  Test Linear with a small team before rolling out company-wide\n\n### **Ready to migrate:**\n\n* [**Migration guide**](https://linear.app/switch/migration-guide) \n  Step-by-step process for importing data and rolling out Linear\n\n---\n\nIf you have any questions hit `?` in the bottom left > Contact us.\n\n![contactlinear (1).gif](https://uploads.linear.app/fe63b3e2-bf87-46c0-8784-cd7d639287c8/191f6985-8562-4f62-9482-a094b69c4756/0e4ff63b-3da2-4699-912b-04afb68511e8)",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-4/import-your-data-4",
      "createdAt": "2025-10-13T09:20:50.906Z",
      "updatedAt": "2025-10-13T09:20:50.906Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-3",
      "linearId": "197b2c56-9ed2-4040-aff7-ee1165a90ed6",
      "title": "Connect your tools (3)",
      "description": "Integrations turn Linear into your source of truth around product development. Keep data in sync, and eliminate manual updates between tools.\n\n![connect-your-tools.png](https://uploads.linear.app/fe63b3e2-bf87-46c0-8784-cd7d639287c8/c2eae035-37e2-4754-adcb-b8305431aa1f/c92d70c7-e6d0-4fa2-a0fd-78f6e780993a)\n\n### **Key integrations**\n\n* [**Slack**](https://linear.app/settings/integrations/slack)\n  Create issues from Slack messages and sync threads\n* [**GitHub**](https://linear.app/settings/integrations/github)** / **[**GitLab**](https://linear.app/settings/integrations/gitlab)\n  Automate your pull request, commit workflows, and keep issues synced both ways\n* [**Agents**](https://linear.app/integrations/agents)\n  Deploy AI agents that work alongside you as teammates\n\n### **Browse all integrations**\n\nDiscover 150+ available connections in our [integration directory](https://linear.app/integrations) – from bug creation via support tools (Intercom, Zendesk), to issues created from design explorations (Figma).\n\n### **Linear API**\n\nIf you need something more custom, you can build directly on the Linear API (built on GraphQL). [See our Dev Docs to learn more](https://linear.app/developers).",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-3/connect-your-tools-3",
      "createdAt": "2025-10-13T09:20:50.906Z",
      "updatedAt": "2025-10-13T09:20:50.906Z",
      "parent": null,
      "children": []
    }
  ],
  "mobileTickets": [
    {
      "id": "ASK-43",
      "linearId": "5cb25049-4edb-4889-bfc4-6e6a8030ab31",
      "title": "[MOBILE-104] Add document download integration",
      "description": "**Objective:** Download PDFs generated by middleware\n\n**Description:**\nIntegrate document generation buttons that appear after analysis, calling the document generation API.\n\n**Document Types:**\n\n- [ ] **PDF Quote**: Detailed cost breakdown\n- [ ] **Project Plan**: Timeline and phases\n- [ ] **Task List**: Actionable checklist\n\n**UI Integration:**\n\n```typescript\n// Message with document buttons\n{message.showDocumentButtons && (\n  <div className=\"document-buttons\">\n    <button onClick={() => downloadDocument('quote')}>\n      📄 Download PDF Quote\n    </button>\n    <button onClick={() => downloadDocument('timeline')}>\n      📅 Download Project Plan\n    </button>\n    <button onClick={() => downloadDocument('tasklist')}>\n      ✅ Download Task List\n    </button>\n  </div>\n)}\n```\n\n**Download Flow:**\n\n```typescript\nconst downloadDocument = async (type: DocumentType) => {\n  const response = await supabase.functions.invoke('generate-document', {\n    body: { \n      type,\n      projectType: analysis.projectType,\n      analysis,\n      pricing\n    }\n  })\n  \n  // Handle PDF blob download\n  // Show success message\n  // Track download event\n}\n```\n\n**Mobile Optimization:**\n\n- [ ] Native sharing integration\n- [ ] Download progress indicators\n- [ ] Save to device storage\n- [ ] Share via email/messaging\n- [ ] Offline access to downloaded documents",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-43/mobile-104-add-document-download-integration",
      "createdAt": "2025-10-15T09:52:39.696Z",
      "updatedAt": "2025-10-15T09:52:39.696Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-42",
      "linearId": "e5f646c0-4c3f-4015-b039-322f1cb7f360",
      "title": "[MOBILE-103] Integrate multi-modal input system",
      "description": "**Objective:** Support text + photos + videos + PDFs in chat interface\n\n**Description:**\nBuild comprehensive input system supporting all media types like the web app.\n\n**Input Types:**\n\n- [ ] **Text**: Auto-resize textarea with placeholder\n- [ ] **Photos**: Camera capture + gallery selection\n- [ ] **Videos**: Recording + gallery selection (60 second max)\n- [ ] **PDFs**: File picker with preview\n- [ ] **Multiple files**: Up to 4 attachments per message\n\n**ChatGPT-style Integration:**\n\n```typescript\ninterface ChatInputProps {\n  onSend: (data: {\n    text?: string\n    attachments?: Attachment[]\n  }) => void\n}\n\ninterface Attachment {\n  type: 'image' | 'video' | 'pdf'\n  uri: string\n  name: string\n  size: number\n  preview?: string\n}\n```\n\n**UI Components:**\n\n- [ ] Expandable text input\n- [ ] Attachment preview grid\n- [ ] Remove attachment buttons\n- [ ] File type icons\n- [ ] Upload progress indicators\n- [ ] File size validation messages\n\n**Validation:**\n\n* Images: 10MB max, JPG/PNG/HEIC\n* Videos: 10MB max, MP4/MOV, 60s max\n* PDFs: 200MB max, architectural drawings\n* Total: 4 files maximum per message",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-42/mobile-103-integrate-multi-modal-input-system",
      "createdAt": "2025-10-15T09:52:38.470Z",
      "updatedAt": "2025-10-15T09:52:38.470Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-41",
      "linearId": "4505f223-68b6-4f4a-bbd9-c273d7a1dd9f",
      "title": "[MOBILE-102] Extract camera logic to reusable hooks",
      "description": "**Objective:** Reuse existing camera functionality in chat interface\n\n**Description:**\nExtract working camera/gallery logic from CameraScreen into reusable hooks for integration with chat input.\n\n**Hooks to Create:**\n\n```typescript\n// useCameraCapture.ts\nexport const useCameraCapture = () => {\n  const capturePhoto = async () => {\n    // Use existing camera logic\n    // Return only URI - no analysis\n  }\n  \n  return {\n    capturePhoto,\n    isLoading,\n    error,\n    hasPermission\n  }\n}\n\n// useGalleryPicker.ts  \nexport const useGalleryPicker = () => {\n  const pickImage = async () => {\n    // Use existing gallery logic\n  }\n  \n  return { pickImage, isLoading, error }\n}\n\n// useFileUpload.ts\nexport const useFileUpload = () => {\n  const uploadFile = async (files: FileList) => {\n    // Handle PDFs, videos, images\n    // File validation and compression\n  }\n  \n  return { uploadFile, isLoading, error }\n}\n```\n\n**Integration Pattern:**\n\n```typescript\n// ChatInput.tsx\nconst ChatInput = () => {\n  const { capturePhoto } = useCameraCapture()\n  const { pickImage } = useGalleryPicker()\n  \n  return (\n    <div className=\"chat-input\">\n      <input type=\"text\" />\n      <button onClick={capturePhoto}>📷</button>\n      <button onClick={pickImage}>🖼️</button>\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  )\n}\n```\n\n**File Management:**\n\n- [ ] Image preview before sending\n- [ ] Multiple file selection (up to 4)\n- [ ] File type validation\n- [ ] Size limits and compression\n- [ ] Remove attached files option",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-41/mobile-102-extract-camera-logic-to-reusable-hooks",
      "createdAt": "2025-10-15T09:52:37.158Z",
      "updatedAt": "2025-10-15T09:52:37.158Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-40",
      "linearId": "a7f23a8f-4b98-49b1-9417-cd930ebdeed4",
      "title": "[MOBILE-101] Create thin client ChatScreen",
      "description": "**Objective:** Build chat-first UI that ONLY calls APIs (zero business logic)\n\n**Description:**\nReplace camera-first navigation with ChatGPT-style interface that matches the web app design, calling only APIs for all business logic.\n\n**Design Requirements:**\n\n- [ ] Match `ToddyAdviceChat.tsx` design exactly\n- [ ] AskToddy orange (#FF6B35) and navy (#2C3E50) colors\n- [ ] Message bubbles with gradients and shadows\n- [ ] Toddy avatar for assistant messages\n- [ ] User avatar for user messages\n- [ ] Professional enterprise appearance\n\n**Functionality:**\n\n- [ ] Real-time message interface\n- [ ] Conversation history persistence\n- [ ] Loading states with typing indicators\n- [ ] Error handling with retry options\n- [ ] Auto-scroll to latest message\n- [ ] Message timestamps\n- [ ] Copy message content functionality\n\n**API Integration:**\n\n```typescript\n// ONLY API calls - NO business logic\nconst handleSend = async () => {\n  const { data, error } = await supabase.functions.invoke('analyze-construction', {\n    body: { \n      message: input, \n      imageUri: attachedImage,\n      history: messages.slice(-6),\n      context: userContext\n    }\n  })\n  \n  if (data) {\n    setMessages(prev => [...prev, {\n      role: 'assistant',\n      content: data.response,\n      showDocumentButtons: data.canGenerateDocuments\n    }])\n  }\n}\n```\n\n**No Business Logic:**\n\n* ❌ No AI providers in frontend\n* ❌ No pricing calculations\n* ❌ No cost analysis\n* ❌ No document generation logic\n* ✅ Only UI state management\n* ✅ Only API calls and display",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-40/mobile-101-create-thin-client-chatscreen",
      "createdAt": "2025-10-15T09:52:35.910Z",
      "updatedAt": "2025-10-15T09:52:35.910Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-38",
      "linearId": "5f6c489a-e5be-4f9c-a5da-3da6256d2131",
      "title": "[API-005] Implement document generation Edge Function",
      "description": "**Objective:** Generate professional PDF quotes, project plans, and task lists\n\n**Description:**\nCreate document generation service that produces professional, branded PDF documents from analysis results.\n\n**Document Types:**\n\n#### **PDF Quote Generation**\n\n- [ ] Detailed cost breakdown with line items\n- [ ] AskToddy branding and logo\n- [ ] VAT calculations and totals\n- [ ] Terms and conditions\n- [ ] Contact information\n- [ ] Professional formatting\n\n#### **Project Plan Timeline**\n\n- [ ] Gantt-style visual timeline\n- [ ] Phase breakdown with dependencies\n- [ ] Resource allocation\n- [ ] Milestone markers\n- [ ] Critical path highlighting\n- [ ] Risk assessments\n\n#### **Task List Generation**\n\n- [ ] Categorized task breakdown\n- [ ] Dependencies and prerequisites\n- [ ] Estimated durations\n- [ ] Skills required\n- [ ] Tools and materials needed\n- [ ] Safety considerations\n\n**API Contract:**\n\n```typescript\n// POST /generate-document\ninterface DocumentRequest {\n  type: 'quote' | 'timeline' | 'tasklist'\n  projectType: string\n  analysis: ProjectAnalysis\n  pricing: PricingResponse\n  userDetails?: {\n    name: string\n    email: string\n    address: string\n  }\n}\n\n// Response: PDF blob with proper headers\nContent-Type: application/pdf\nContent-Disposition: attachment; filename=\"project-quote-20250115.pdf\"\n```\n\n**Templates:**\n\n* Professional AskToddy branding\n* Consistent typography and colors\n* Mobile-optimized layouts\n* Print-friendly formatting\n\n**Technical Stack:**\n\n* Puppeteer for PDF generation\n* HTML/CSS templates\n* Dynamic data injection\n* Asset management (logos, fonts)",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-38/api-005-implement-document-generation-edge-function",
      "createdAt": "2025-10-15T09:52:33.386Z",
      "updatedAt": "2025-10-15T09:52:33.386Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-35",
      "linearId": "3055f1a4-5403-4f0f-a9c2-002fddc6a664",
      "title": "[API-002] Migrate AIMiddleware to analyze-construction Edge Function",
      "description": "**Objective:** Move ALL AI logic from mobile app to Supabase Edge Function\n\n**Description:**\nTransfer the complete AIMiddleware system (455 lines) from mobile to server-side to eliminate technical debt and enable proper API-first architecture.\n\n**Files to Migrate:**\n\n* `src/services/ai/AIMiddleware.ts` → `supabase/functions/analyze-construction/middleware.ts`\n* `src/services/ai/providers/GeminiProvider.ts` → `supabase/functions/analyze-construction/providers/gemini.ts`\n* `src/services/ai/types.ts` → `supabase/functions/analyze-construction/types.ts`\n\n**Acceptance Criteria:**\n\n- [ ] AIMiddleware class working in Deno environment\n- [ ] Provider registration system functional\n- [ ] Gemini provider integrated with API key from environment\n- [ ] Mock provider available for development\n- [ ] Timeout handling (30 seconds)\n- [ ] Error handling and fallback logic\n- [ ] Health check endpoint: `GET /analyze-construction/health`\n- [ ] Main analysis endpoint: `POST /analyze-construction`\n\n**API Contract:**\n\n```typescript\n// Request\ninterface AnalysisRequest {\n  imageUri?: string\n  message?: string\n  context?: {\n    projectType?: string\n    location?: string\n    budgetRange?: { min: number; max: number }\n  }\n  history?: Message[]\n}\n\n// Response  \ninterface AnalysisResponse {\n  projectType: string\n  description: string\n  costBreakdown: CostBreakdown\n  timeline: Timeline\n  recommendations: string[]\n  confidence: number\n  aiProvider: string\n  processingTimeMs: number\n}\n```\n\n**Testing:**\n\n* Unit tests for middleware functions\n* Integration test with real Gemini API\n* Error handling scenarios\n* Performance benchmarks",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-35/api-002-migrate-aimiddleware-to-analyze-construction-edge-function",
      "createdAt": "2025-10-15T09:52:29.588Z",
      "updatedAt": "2025-10-15T09:52:29.588Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-24",
      "linearId": "c680970b-fc8c-4b23-ac96-43a91ba9f4e1",
      "title": "Set up authentication system (free tier MVP)",
      "description": "✅ COMPLETED\n\n## Implemented:\n\n* Supabase authentication integration using shared backend\n* AuthContext for global authentication state management\n* Sign in/sign up screens with proper validation\n* Authentication-aware navigation (AuthNavigator)\n* Free tier user registration with metadata\n* Session persistence and automatic refresh\n* Proper error handling with user-friendly messages\n* Placeholder screens for testing navigation flow\n\n## Features:\n\n* Email/password authentication\n* Form validation (email format, password strength)\n* Loading states and error feedback\n* Automatic navigation based on auth state\n* Session management with Supabase\n* Free tier user tagging\n\n## Files Created:\n\n* /src/services/supabase.ts - Supabase client and auth helpers\n* /src/contexts/AuthContext.tsx - Authentication state management\n* /src/navigation/AuthNavigator.tsx - Auth-aware routing\n* .env - Environment variables for Supabase\n* Updated LoginScreen and HomeScreen with real auth\n\nReady for camera component implementation.",
      "status": "Done",
      "stateType": "completed",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-24/set-up-authentication-system-free-tier-mvp",
      "createdAt": "2025-10-14T12:40:43.228Z",
      "updatedAt": "2025-10-14T13:43:30.521Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-30",
      "linearId": "99f73fcb-2004-4254-9dc2-09e4c8a431dd",
      "title": "Create UI components matching web app design system",
      "description": "✅ COMPLETED\n\n## Implemented:\n\n* Complete design system with AskToddy orange/navy theme\n* Reusable UI components (Button, Input, Card)\n* Splash screen with branding\n* Login/registration screens with free tier messaging\n* Updated HomeScreen with new design\n* Proper navigation flow (Splash → Login → Home)\n* Responsive design for various screen sizes\n* Typography and color system matching web app\n\n## Files Created:\n\n* /src/styles/designTokens.ts\n* /src/components/ui/Button.tsx\n* /src/components/ui/Input.tsx\n* /src/components/ui/Card.tsx\n* /src/screens/SplashScreen.tsx\n* /src/screens/LoginScreen.tsx\n* Updated HomeScreen and App.tsx\n\nReady for authentication system implementation.",
      "status": "Done",
      "stateType": "completed",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-30/create-ui-components-matching-web-app-design-system",
      "createdAt": "2025-10-14T13:18:36.153Z",
      "updatedAt": "2025-10-14T13:29:17.655Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-33",
      "linearId": "46898965-9d80-4ce8-b91c-0e35600ede1c",
      "title": "Add user feedback system for quote refinement",
      "description": "Allow users to provide feedback on quotes and regenerate with specific rates.\n\n## Acceptance Criteria\n\n- [ ] Create feedback interface on quote results\n- [ ] Allow users to adjust material preferences\n- [ ] Enable labor rate customization\n- [ ] Add tool hire preference selection\n- [ ] Implement quote regeneration with user inputs\n- [ ] Store user preferences for future quotes\n- [ ] Add feedback collection for AI training",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-33/add-user-feedback-system-for-quote-refinement",
      "createdAt": "2025-10-14T13:22:41.856Z",
      "updatedAt": "2025-10-14T13:22:41.856Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-32",
      "linearId": "3eaa8ece-a5c4-4756-bb61-d6c6984b1c2c",
      "title": "Implement context-aware pricing system",
      "description": "Build middleware to incorporate real-time pricing data for accurate quotes.\n\n## Acceptance Criteria\n\n- [ ] Integrate tool hire rates data\n- [ ] Add material pricing data\n- [ ] Include aggregate rates\n- [ ] Incorporate labor rates by region\n- [ ] Create pricing data management system\n- [ ] Implement real-time rate updates\n- [ ] Add fallback pricing when data unavailable\n- [ ] Create pricing configuration interface",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-32/implement-context-aware-pricing-system",
      "createdAt": "2025-10-14T13:22:10.620Z",
      "updatedAt": "2025-10-14T13:22:10.620Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-31",
      "linearId": "123d5b14-ada7-4ef6-b094-fd7b0f018e54",
      "title": "Build AI-agnostic middleware for quote generation",
      "description": "Create flexible middleware that can work with multiple AI providers (Gemini, OpenAI, etc).\n\n## Acceptance Criteria\n\n- [ ] Design AI provider interface/abstraction\n- [ ] Implement Gemini provider\n- [ ] Add OpenAI provider support\n- [ ] Create provider switching mechanism\n- [ ] Handle provider-specific formatting\n- [ ] Implement fallback logic\n- [ ] Add configuration for provider selection",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-31/build-ai-agnostic-middleware-for-quote-generation",
      "createdAt": "2025-10-14T13:21:51.282Z",
      "updatedAt": "2025-10-14T13:21:51.282Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-29",
      "linearId": "8f67e903-ea1f-48d2-ac9e-0676bc30eaf2",
      "title": "Test end-to-end flow and finalize MVP",
      "description": "Complete end-to-end testing of the mobile app and prepare for launch.\n\n## Acceptance Criteria\n\n- [ ] Test complete user flow (camera → analysis → results)\n- [ ] Verify all error handling scenarios\n- [ ] Test on multiple devices/screen sizes\n- [ ] Performance testing and optimization\n- [ ] Final UI/UX polish\n- [ ] Beta testing with real users\n- [ ] Bug fixes and improvements\n- [ ] Prepare for production release",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-29/test-end-to-end-flow-and-finalize-mvp",
      "createdAt": "2025-10-14T13:11:33.577Z",
      "updatedAt": "2025-10-14T13:11:33.577Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-28",
      "linearId": "f05b4dc5-7499-4145-a1d6-b20b1b18b579",
      "title": "Configure app for TestFlight deployment",
      "description": "Set up mobile app for TestFlight distribution and App Store deployment.\n\n## Acceptance Criteria\n\n- [ ] Configure EAS Build for iOS\n- [ ] Set up proper app signing\n- [ ] Configure app metadata (icons, splash screens)\n- [ ] Test build process\n- [ ] Upload to TestFlight\n- [ ] Set up beta testing group",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-28/configure-app-for-testflight-deployment",
      "createdAt": "2025-10-14T13:09:59.504Z",
      "updatedAt": "2025-10-14T13:09:59.504Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-27",
      "linearId": "9e4d3caf-7872-448d-af0f-563b5c61be46",
      "title": "Connect mobile app to Supabase Gemini analysis API",
      "description": "Integrate mobile app with existing Supabase backend for AI-powered construction analysis.\n\n## Acceptance Criteria\n\n- [ ] Upload images to Supabase storage\n- [ ] Call Gemini analysis API endpoint\n- [ ] Handle image preprocessing (convert to base64)\n- [ ] Implement proper error handling\n- [ ] Add loading states\n- [ ] Parse and display API responses",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-27/connect-mobile-app-to-supabase-gemini-analysis-api",
      "createdAt": "2025-10-14T13:09:48.193Z",
      "updatedAt": "2025-10-14T13:09:48.193Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-26",
      "linearId": "625d3cca-4e39-477f-ad54-93d80a92f70b",
      "title": "Create analysis results screen",
      "description": "Build results screen to display construction project quotes and analysis from AI.\n\n## Acceptance Criteria\n\n- [ ] Display captured image\n- [ ] Show loading state during analysis\n- [ ] Display quote breakdown (materials, labor, total)\n- [ ] Show timeline estimates\n- [ ] Display tool recommendations\n- [ ] Error handling for API failures\n- [ ] Option to retake photo or analyze another project",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-26/create-analysis-results-screen",
      "createdAt": "2025-10-14T12:41:48.052Z",
      "updatedAt": "2025-10-14T12:41:48.052Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-25",
      "linearId": "3bb69c4b-f51c-49d6-8b29-1616fb00b3aa",
      "title": "Build MVP camera component for image capture",
      "description": "Create camera screen with photo capture functionality for construction project analysis.\n\n## Acceptance Criteria\n\n- [ ] Camera view with live preview\n- [ ] Photo capture functionality\n- [ ] Gallery picker integration\n- [ ] Proper permission handling\n- [ ] Error handling for camera failures\n- [ ] Navigation to results screen with captured image",
      "status": "Todo",
      "stateType": "unstarted",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-25/build-mvp-camera-component-for-image-capture",
      "createdAt": "2025-10-14T12:41:09.321Z",
      "updatedAt": "2025-10-14T12:41:09.321Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-23",
      "linearId": "724f83a4-54a9-4eea-8dea-c25264a81f7e",
      "title": "Set up Expo React Native project with TypeScript",
      "description": "✅ COMPLETED\n\n* Created fresh asktoddy-mobile directory\n* Initialized Expo with TypeScript template\n* Configured app.json with proper bundle IDs and camera permissions\n* Set up Git repository\n* Installed navigation, camera, and Supabase packages",
      "status": "Done",
      "stateType": "completed",
      "priority": 0,
      "priorityLabel": "No Priority",
      "estimate": null,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "project": "AskToddy Mobile App",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-23/set-up-expo-react-native-project-with-typescript",
      "createdAt": "2025-10-14T12:38:16.302Z",
      "updatedAt": "2025-10-14T12:38:16.302Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-12",
      "linearId": "3a51eee4-67aa-492c-b442-284d1f810d7a",
      "title": "🔌 Set up Supabase Edge Functions API ✅ COMPLETED",
      "description": "## ✅ COMPLETED - Supabase Edge Functions API Layer\n\n## Architecture Decision: Supabase Edge Functions ✅\n\nChose Supabase over NestJS for better integration with existing infrastructure.\n\n## Why Supabase Edge Functions?\n\n* ✅ Already using Supabase database\n* ✅ Built-in auth integration\n* ✅ Global edge deployment\n* ✅ TypeScript/Deno runtime\n* ✅ Single ecosystem, lower costs\n\n## Completed API Endpoints\n\n* `/functions/v1/gemini-analysis` - AI construction analysis\n* `/functions/v1/construction-pricing` - UK materials and labor rates\n* `/functions/v1/tool-hire` - Tool rental recommendations\n* `/functions/v1/chat` - AI conversational interface\n\n## Features Implemented\n\n* ✅ CORS handling for mobile app integration\n* ✅ TypeScript interfaces and validation\n* ✅ Error handling and logging\n* ✅ Mock UK pricing data (Travis Perkins, Wickes, Selco)\n* ✅ Labor rates by region and trade\n* ✅ Environment configuration structure\n\n## Repository Structure\n\n```\n/supabase/functions/\n├── _shared/cors.ts        # CORS utilities\n├── gemini-analysis/       # AI analysis endpoint\n├── construction-pricing/  # UK pricing data API\n├── tool-hire/            # Tool hire recommendations\n└── chat/                 # Chat interface\n```\n\n## Ready For\n\n* Mobile app integration\n* Production deployment to Supabase\n* Environment variable configuration\n\nNext: Connect mobile app to these APIs and extract business logic from web app.",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-12/set-up-supabase-edge-functions-api-completed",
      "createdAt": "2025-10-13T10:02:57.071Z",
      "updatedAt": "2025-10-13T12:17:54.534Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-6",
      "linearId": "5defe182-468a-444c-abdd-3cd5725881bd",
      "title": "📦 Create monorepo structure for shared code ✅ COMPLETED",
      "description": "## ✅ COMPLETED\n\nMonorepo structure successfully created.\n\n## Completed Structure\n\n```\nasktoddy-platform/\n├── apps/\n│   └── mobile/         # React Native app\n├── packages/\n│   ├── shared-services/ # Business logic\n│   └── shared-types/    # TypeScript types\n```\n\n## Completed Tasks\n\n* ✅ Set up workspace structure (apps/, packages/)\n* ✅ Configure shared TypeScript configurations\n* ✅ Set up package.json workspaces\n* ✅ Create shared-types package structure\n* ✅ Create business-logic package structure\n\n## Ready For\n\n* Mobile development\n* Shared service integration\n* API middleware development",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-6/create-monorepo-structure-for-shared-code-completed",
      "createdAt": "2025-10-13T10:02:51.581Z",
      "updatedAt": "2025-10-13T11:11:19.016Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-5",
      "linearId": "cbcf2e6e-b7e0-4f52-bc3e-86d925a1f13e",
      "title": "🏗️ Set up React Native project with Expo ✅ COMPLETED",
      "description": "## ✅ COMPLETED\n\nMonorepo structure created at /Users/olivertodd/asktoddy-platform\n\n## Completed Tasks\n\n* ✅ Initialize Expo project with TypeScript template\n* ✅ Configure TypeScript with strict mode\n* ✅ Set up ESLint and Prettier\n* ✅ Configure Jest for testing\n* ✅ Set up folder structure matching web app patterns\n* ✅ Create monorepo with workspaces\n\n## Success Criteria Met\n\n* ✅ Project runs on development server\n* ✅ TypeScript compilation works\n* ✅ Ready for shared package integration\n\nReady to proceed with middleware API setup (ASK-12).",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-5/set-up-react-native-project-with-expo-completed",
      "createdAt": "2025-10-13T10:02:50.801Z",
      "updatedAt": "2025-10-13T11:11:18.712Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-11",
      "linearId": "9446f32f-adf4-42c1-ae13-0e37d80eab04",
      "title": "📍 Port SmartLocationService to mobile (with GPS)",
      "description": "## ARCHITECTURE UPDATE: Mobile-First for Privacy ✅\n\n## Objective\n\nPort location services directly to mobile app for GPS integration and privacy.\n\n## Why Mobile Direct?\n\n* ✅ Needs mobile GPS permissions anyway\n* ✅ Location processing can be local\n* ✅ Privacy-friendly (location stays on device)\n* ✅ Better offline capability\n\n## Current Location (Web App)\n\n/lib/location/smart-location.service.ts\n\n## Tasks\n\n- [ ] Port UK location detection logic to mobile\n- [ ] Integrate React Native geolocation\n- [ ] Add location permission handling\n- [ ] Port supplier recommendation logic\n- [ ] Test on both iOS and Android\n- [ ] Add offline location caching\n\n## Mobile Dependencies\n\n* expo-location for GPS access\n* AsyncStorage for location caching\n* iOS/Android permission handling\n\n## Value\n\nLocation-based recommendations with full privacy control",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-11/port-smartlocationservice-to-mobile-with-gps",
      "createdAt": "2025-10-13T10:02:56.237Z",
      "updatedAt": "2025-10-13T11:11:18.365Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-9",
      "linearId": "cdec7d1f-07bb-468d-9960-bfde6a621343",
      "title": "🛠️ Port ToolExpertiseService to mobile (offline)",
      "description": "## ARCHITECTURE UPDATE: Mobile-First for Offline Use ✅\n\n## Objective\n\nPort tool expertise knowledge directly to mobile app for instant offline access.\n\n## Why Mobile Direct?\n\n* ✅ Static knowledge base - perfect for offline use\n* ✅ No API calls needed - instant responses\n* ✅ 1,770 lines of pure domain knowledge\n* ✅ Better user experience (no network dependency)\n\n## Current Location (Web App)\n\n/lib/tools/tool-expertise.service.ts\n\n## Tasks\n\n- [ ] Copy ToolExpertiseService to shared-services package\n- [ ] Create searchable interface for mobile\n- [ ] Optimize for mobile performance\n- [ ] Add offline caching with AsyncStorage\n- [ ] Create tool recommendation engine\n- [ ] Build tool search and filtering\n\n## Mobile Integration\n\n* Import directly in mobile app\n* Store in AsyncStorage for fast access\n* Enable offline tool recommendations\n\n## Value\n\nGold mine of domain expertise - critical competitive advantage that works without internet",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-9/port-toolexpertiseservice-to-mobile-offline",
      "createdAt": "2025-10-13T10:02:54.629Z",
      "updatedAt": "2025-10-13T11:11:17.850Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-8",
      "linearId": "891922d6-b039-4190-938a-2b80de6f1e76",
      "title": "🔨 Build ConstructionDataService API endpoints",
      "description": "## ARCHITECTURE UPDATE: API-First Approach ✅\n\n## Objective\n\nCreate NestJS API endpoints for UK construction pricing data (moved from direct mobile integration for performance and updates).\n\n## Why API Layer?\n\n* ✅ Large datasets better served from API\n* ✅ Enable pricing updates without app releases\n* ✅ Add caching and CDN support\n* ✅ Real-time pricing synchronization\n\n## Current Location (Web App)\n\n/lib/construction-data/construction-data.service.ts\n\n## Tasks\n\n- [ ] Extract construction data to NestJS service\n- [ ] Create /api/pricing endpoints\n- [ ] Implement data caching strategy\n- [ ] Add real-time pricing updates\n- [ ] Create search and filtering endpoints\n\n## API Endpoints to Create\n\n* GET /api/pricing/materials - Get material costs\n* GET /api/pricing/labor - Get labor rates by region\n* GET /api/pricing/categories - Get pricing categories\n* GET /api/pricing/search - Search pricing data\n\n## Dependencies\n\n* Requires ASK-12 (NestJS setup) to be completed first\n\n## Value\n\nEssential UK market data - 100% reusable with better performance",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-8/build-constructiondataservice-api-endpoints",
      "createdAt": "2025-10-13T10:02:53.587Z",
      "updatedAt": "2025-10-13T11:11:17.469Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-7",
      "linearId": "f18ee181-3159-4851-9c4d-290dc44e63b9",
      "title": "🤖 Build GeminiService API endpoints",
      "description": "## ARCHITECTURE UPDATE: API-First Approach ✅\n\n## Objective\n\nCreate NestJS API endpoints for Google Gemini AI service (moved from direct mobile integration for security and performance).\n\n## Why API Layer?\n\n* ✅ Keep API keys secure on server\n* ✅ Enable rate limiting and caching\n* ✅ Heavy AI processing on backend\n* ✅ Better error handling\n\n## Current Location (Web App)\n\n/lib/ai/gemini.service.ts\n\n## Tasks\n\n- [ ] Extract GeminiService to NestJS controller\n- [ ] Create /api/analysis endpoints\n- [ ] Add image upload handling\n- [ ] Implement error handling and validation\n- [ ] Add rate limiting for AI calls\n- [ ] Cache common analysis results\n\n## API Endpoints to Create\n\n* POST /api/analysis/image - Upload and analyze construction images\n* POST /api/chat/message - AI chat responses\n* GET /api/analysis/:id - Get analysis results\n\n## Dependencies\n\n* Requires ASK-12 (NestJS setup) to be completed first\n\n## Value\n\nCore AI differentiator - enables secure AI-powered construction analysis",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-7/build-geminiservice-api-endpoints",
      "createdAt": "2025-10-13T10:02:52.251Z",
      "updatedAt": "2025-10-13T11:11:17.183Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-22",
      "linearId": "ebf09e38-cb68-4556-ad14-52e8a7144ed0",
      "title": "🌐 Deploy current web app to Vercel",
      "description": "## Objective\n\nDeploy the existing Next.js app for immediate user testing.\n\n## Tasks\n\n- [ ] Set up Vercel project\n- [ ] Configure environment variables\n- [ ] Set up custom domain\n- [ ] Configure Sentry error tracking\n- [ ] Set up analytics\n- [ ] Test all features in production\n\n## Purpose\n\nKeep web app running while building mobile MVP",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 2,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-22/deploy-current-web-app-to-vercel",
      "createdAt": "2025-10-13T10:03:04.896Z",
      "updatedAt": "2025-10-13T10:03:04.896Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-21",
      "linearId": "74c5e011-e023-4dba-b9c1-26708e72ea4d",
      "title": "🚀 Deploy MVP to TestFlight/Google Play Beta",
      "description": "## Objective\n\nDeploy the mobile MVP for testing with friends and family.\n\n## Tasks\n\n- [ ] Configure app signing\n- [ ] Set up CI/CD pipeline\n- [ ] Deploy to TestFlight (iOS)\n- [ ] Deploy to Google Play Beta (Android)\n- [ ] Set up crash reporting\n- [ ] Configure analytics\n\n## Success\n\nFriends and family can test the app",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-21/deploy-mvp-to-testflightgoogle-play-beta",
      "createdAt": "2025-10-13T10:03:04.109Z",
      "updatedAt": "2025-10-13T10:03:04.109Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-20",
      "linearId": "5a0af639-d90a-4c22-aed1-3ba6f63cbff7",
      "title": "✅ End-to-end testing of core flows",
      "description": "## Objective\n\nTest complete user journeys on mobile.\n\n## Test Flows\n\n- [ ] Photo upload → Analysis → Results\n- [ ] Chat interaction flow\n- [ ] Project creation and management\n- [ ] Tool hire inquiry flow\n- [ ] Offline/online synchronization\n\n## Platforms\n\nTest on iOS and Android",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-20/end-to-end-testing-of-core-flows",
      "createdAt": "2025-10-13T10:03:03.309Z",
      "updatedAt": "2025-10-13T10:03:03.309Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-19",
      "linearId": "a3bd8409-65f1-418d-b41f-5cddca4685a2",
      "title": "🔗 Connect mobile app to middleware API",
      "description": "## Objective\n\nIntegrate React Native app with NestJS API.\n\n## Tasks\n\n- [ ] Configure API client\n- [ ] Add request interceptors\n- [ ] Implement error handling\n- [ ] Add retry logic\n- [ ] Configure offline queue\n- [ ] Add API response caching",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 3,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-19/connect-mobile-app-to-middleware-api",
      "createdAt": "2025-10-13T10:03:02.626Z",
      "updatedAt": "2025-10-13T10:03:02.626Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-17",
      "linearId": "098486bd-7b75-4e07-ba1a-cad6944dad64",
      "title": "💬 Implement chat interface",
      "description": "## Objective\n\nBuild mobile chat UI for AI assistant.\n\n## Features\n\n- [ ] Message bubbles UI\n- [ ] Typing indicators\n- [ ] Image attachment support\n- [ ] Quick action buttons\n- [ ] Message history\n- [ ] Offline message queue\n\n## Integration\n\nConnect to GeminiService",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 3,
      "priorityLabel": "Medium",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-17/implement-chat-interface",
      "createdAt": "2025-10-13T10:03:01.121Z",
      "updatedAt": "2025-10-13T10:03:01.121Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-16",
      "linearId": "48e246ed-01e2-49fe-b6d7-3884396fb5da",
      "title": "📊 Create analysis results screen",
      "description": "## Objective\n\nBuild mobile UI for displaying construction analysis results.\n\n## Features\n\n- [ ] Display AI analysis results\n- [ ] Show cost breakdowns\n- [ ] Display material lists\n- [ ] Show tool recommendations\n- [ ] Add sharing functionality\n- [ ] Implement offline viewing\n\n## Design\n\nAdapt web AnalysisResults.tsx for mobile",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-16/create-analysis-results-screen",
      "createdAt": "2025-10-13T10:03:00.393Z",
      "updatedAt": "2025-10-13T10:03:00.393Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-15",
      "linearId": "d9b865cd-9d84-48fd-a6c7-a9819f1e4e73",
      "title": "📸 Build camera/image picker component",
      "description": "## Objective\n\nCreate React Native component for photo capture and selection.\n\n## Requirements\n\n- [ ] Implement expo-image-picker\n- [ ] Add camera permissions handling\n- [ ] Support multiple image selection\n- [ ] Add image preview and editing\n- [ ] Compress images for upload\n- [ ] Handle iOS and Android differences\n\n## Replaces\n\nWeb FileUpload component",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 1,
      "priorityLabel": "Urgent",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-15/build-cameraimage-picker-component",
      "createdAt": "2025-10-13T10:02:59.667Z",
      "updatedAt": "2025-10-13T10:02:59.667Z",
      "parent": null,
      "children": []
    },
    {
      "id": "ASK-14",
      "linearId": "a167bcfc-ef4f-4af1-a5c5-6f1141abbffb",
      "title": "🔐 Implement authentication layer",
      "description": "## Objective\n\nAdd authentication for both web and mobile clients.\n\n## Tasks\n\n- [ ] Set up JWT authentication\n- [ ] Configure Supabase Auth integration\n- [ ] Add role-based access control\n- [ ] Implement refresh token logic\n- [ ] Add rate limiting\n\n## Security\n\nCritical for production deployment",
      "status": "Backlog",
      "stateType": "backlog",
      "priority": 2,
      "priorityLabel": "High",
      "estimate": 5,
      "dueDate": null,
      "labels": [],
      "assignee": "Unassigned",
      "team": "Asktoddy",
      "teamKey": "ASK",
      "url": "https://linear.app/asktoddy/issue/ASK-14/implement-authentication-layer",
      "createdAt": "2025-10-13T10:02:58.838Z",
      "updatedAt": "2025-10-13T10:02:58.838Z",
      "parent": null,
      "children": []
    }
  ]
}
