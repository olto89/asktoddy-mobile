{
  "epic": {
    "title": "AI Conversation Intelligence - Professional Construction Consultation",
    "description": "**Problem Statement:**\nCurrently, AskToddy immediately generates large cost estimates (¬£3,500-8,000) from minimal user input like \"I need a quote for an extension\". This is unprofessional and inaccurate.\n\n**Business Impact:**\n- Users receive unreliable quotes with insufficient context\n- Damages credibility with construction professionals\n- Poor user experience vs real contractor consultation process\n- High variance in quote accuracy\n\n**Solution Overview:**\nTransform AskToddy from a \"magic quote generator\" into a professional construction consultant that:\n- Detects information sufficiency before quoting\n- Asks intelligent clarifying questions\n- Guides users through proper project scoping\n- Only provides detailed quotes when sufficient information is gathered\n\n**Success Metrics:**\n- Users provide more detailed project information\n- Higher quote accuracy and confidence scores\n- Professional conversation flow matching industry standards\n- Reduced variance in cost estimates\n\n**Priority:** High - Core product experience issue",
    "priority": 1,
    "labels": ["ai", "conversation", "epic", "user-experience", "professional-quality"]
  },
  "tickets": [
    {
      "title": "Implement Information Sufficiency Detection System",
      "description": "**User Story:**\nAs an AI system, I want to assess whether the user has provided sufficient information for accurate quoting, so that I can route to conversation mode or quote mode appropriately.\n\n**Problem:**\nCurrently, the AI always generates full cost breakdowns regardless of information quality, leading to inaccurate quotes from vague inputs like \"I need a quote for an extension\".\n\n**Acceptance Criteria:**\n- [ ] Create information scoring system (0-8 points)\n  - Project type clarity (0-2 points)\n  - Size/scope details (0-2 points)\n  - Quality requirements (0-2 points)\n  - Specific constraints (0-2 points)\n- [ ] Implement response mode routing:\n  - 0-2 points: CONVERSATION MODE (ask questions)\n  - 3-5 points: ESTIMATION MODE (rough estimate + ask for details)\n  - 6+ points: QUOTE MODE (detailed breakdown)\n- [ ] Add conversation context tracking across messages\n- [ ] Update Edge Function to support dual-mode responses\n\n**Technical Requirements:**\n- Modify `createAnalysisPrompt` in Gemini provider\n- Add information assessment logic before quote generation\n- Implement response type detection in middleware\n- Update mobile app to handle conversational responses\n\n**Definition of Done:**\n- Vague inputs trigger clarifying questions instead of quotes\n- Information scoring works accurately across project types\n- Mobile app displays conversational responses properly\n- Unit tests for information sufficiency detection\n\n**Priority:** High - Core functionality blocker\n**Estimate:** 5-6 hours",
      "priority": 1,
      "labels": ["ai", "conversation", "backend", "critical"]
    },
    {
      "title": "Create Professional Question Templates by Project Type",
      "description": "**User Story:**\nAs a user describing my construction project, I want to receive intelligent, professional questions that help me provide the right information for accurate quoting.\n\n**Current Issue:**\nWhen users provide minimal information, the AI should ask relevant questions like a professional contractor would, not generate random quotes.\n\n**Acceptance Criteria:**\n- [ ] Design question templates for major project types:\n  - **Extensions:** Type, size, purpose, finish level\n  - **Kitchens:** Size, scope, appliances, finish quality\n  - **Bathrooms:** Type, size, fixtures, accessibility needs\n  - **Full renovations:** Scope, priorities, phasing, budget\n- [ ] Implement progressive question flow (2-3 questions per response)\n- [ ] Add educational content to help users understand requirements\n- [ ] Include professional guidance on planning, permits, etc.\n\n**Question Examples:**\n\n**Extension Clarification:**\n\"I'd love to help with your extension! To provide an accurate quote, I need:\n\nüìê **Size & Type:**\n- What type of extension? (single-story, two-story, conservatory)\n- Approximate dimensions or square meters?\n- How many rooms will it include?\n\nüè† **Purpose & Finish:**\n- What's the main use? (kitchen, living space, bedrooms)\n- Desired finish level? (basic, mid-range, high-end)\n\nüìã **Additional Details:**\n- Do you have any photos, plans, or drawings?\n- What's your rough budget expectation?\n- Any specific challenges? (access, existing utilities)\"\n\n**Technical Implementation:**\n- Create question template system in AI providers\n- Add project type detection improvements\n- Implement context-aware follow-up questions\n- Update response formatting for mobile display\n\n**Priority:** High - User experience\n**Estimate:** 4-5 hours",
      "priority": 1,
      "labels": ["ai", "conversation", "user-experience", "templates"]
    },
    {
      "title": "Update AI Prompts with Smart Conversation Logic",
      "description": "**User Story:**\nAs the AI system, I want to have intelligent prompts that detect information gaps and respond appropriately, rather than always generating cost estimates.\n\n**Current Problem:**\nThe existing prompt always instructs the AI to \"provide a comprehensive, accurate quote\" and expects JSON cost breakdown, leading to inappropriate responses for vague inputs.\n\n**Acceptance Criteria:**\n- [ ] Rewrite core AI prompts with two-phase logic:\n  1. **Assessment Phase:** Analyze information completeness\n  2. **Response Phase:** Route to conversation or quote mode\n- [ ] Implement conversation mode responses (no JSON, just helpful questions)\n- [ ] Maintain quote mode for sufficient information (existing JSON format)\n- [ ] Add context awareness from conversation history\n- [ ] Include professional disclaimers and caveats\n\n**New Prompt Structure:**\n```\nPHASE 1: INFORMATION ASSESSMENT\nAnalyze user input and conversation history for:\n- Project type identification (clear/vague)\n- Size and scope details (specific/general/missing)\n- Quality requirements (specified/assumed/unknown)\n- Constraints and special requirements\n\nSCORING (0-8 points):\n- Project clarity: 0-2 points\n- Size/scope: 0-2 points  \n- Quality level: 0-2 points\n- Specific details: 0-2 points\n\nPHASE 2: RESPONSE ROUTING\n0-2 points: CONVERSATION MODE\n- Ask 2-3 specific clarifying questions\n- Provide educational guidance\n- No cost estimates\n\n3-5 points: ESTIMATION MODE  \n- Provide rough range with big caveats\n- Ask for remaining critical details\n- Limited cost guidance\n\n6+ points: QUOTE MODE\n- Generate detailed JSON cost breakdown\n- Include timeline and recommendations\n- Professional disclaimers\n```\n\n**Technical Changes:**\n- Update `GeminiProvider.createAnalysisPrompt()`\n- Modify response parsing to handle conversation mode\n- Add conversation state tracking\n- Update mobile app response handling\n\n**Priority:** High - Core AI behavior\n**Estimate:** 6-8 hours",
      "priority": 1,
      "labels": ["ai", "prompts", "backend", "critical"]
    },
    {
      "title": "Add Conversation State Management and Context Tracking",
      "description": "**User Story:**\nAs a user having a multi-turn conversation with AskToddy, I want the AI to remember what I've already told it and build upon that information progressively.\n\n**Current Issue:**\nEach message is treated independently, so users have to repeat information and the AI doesn't build context across the conversation.\n\n**Acceptance Criteria:**\n- [ ] Implement conversation context persistence across messages\n- [ ] Track information gathered in previous turns\n- [ ] Avoid asking for already-provided information\n- [ ] Build comprehensive project profile over multiple exchanges\n- [ ] Smart follow-up questions based on previous answers\n\n**Context Tracking Examples:**\n\n**Turn 1:**\nUser: \"I need a quote for an extension\"\nAI: Asks about type, size, purpose\n\n**Turn 2:**\nUser: \"It's a 4x6m single-story kitchen extension\"\nAI: Remembers (extension, 24sqm, single-story, kitchen) ‚Üí Asks about finish level, existing layout, access\n\n**Turn 3:**\nUser: \"Mid-range finishes, existing kitchen is dated 1980s\"\nAI: Remembers all previous info ‚Üí Asks about appliances, electrical work, planning permission\n\n**Technical Implementation:**\n- Expand conversation history tracking in ChatScreen\n- Add context extraction and summarization\n- Implement information persistence across messages\n- Update AI prompts to use conversation context\n- Add conversation state visualization for debugging\n\n**Edge Cases:**\n- Handle conversation reset/new project\n- Manage conversation state size limits\n- Handle conflicting information updates\n- Graceful degradation if context is lost\n\n**Priority:** Medium - Enhanced user experience\n**Estimate:** 4-6 hours",
      "priority": 2,
      "labels": ["ai", "conversation", "state-management", "mobile"]
    },
    {
      "title": "Implement Professional Disclaimers and Guidance System",
      "description": "**User Story:**\nAs a user receiving construction estimates, I want to understand the limitations and assumptions so I can make informed decisions about my project.\n\n**Business Need:**\nProfessional contractors always include caveats, disclaimers, and guidance. AskToddy should match this professional standard to build trust and set appropriate expectations.\n\n**Acceptance Criteria:**\n- [ ] Add context-appropriate disclaimers to all estimates\n- [ ] Include professional guidance about next steps\n- [ ] Provide education about construction processes\n- [ ] Add planning permission and regulation guidance\n- [ ] Include site survey recommendations\n\n**Disclaimer Categories:**\n\n**Estimate Accuracy:**\n- \"Estimates based on provided information and typical UK pricing\"\n- \"Site survey recommended for accurate pricing\"\n- \"Prices subject to material cost fluctuations\"\n- \"Additional costs may apply for structural work or complications\"\n\n**Regulatory Guidance:**\n- \"Planning permission may be required - check with local council\"\n- \"Building regulations compliance required for structural work\"\n- \"Party wall agreements may be needed for extensions\"\n\n**Professional Recommendations:**\n- \"Recommend getting 3 quotes from local contractors\"\n- \"Consider hiring an architect for complex projects\"\n- \"Factor in 10-20% contingency for unexpected issues\"\n\n**Process Education:**\n- \"Typical project phases: Design ‚Üí Planning ‚Üí Construction\"\n- \"Allow 2-4 weeks for material delivery\"\n- \"Consider seasonal timing for best prices\"\n\n**Technical Implementation:**\n- Create disclaimer template system\n- Add context-aware disclaimer selection\n- Implement professional guidance responses\n- Update mobile app to display disclaimers clearly\n- Add educational content links\n\n**Integration Points:**\n- Conversation mode responses\n- Estimation mode caveats  \n- Quote mode professional disclaimers\n- Document generation includes full disclaimers\n\n**Priority:** Medium - Professional credibility\n**Estimate:** 3-4 hours",
      "priority": 2,
      "labels": ["ai", "professional", "disclaimers", "user-education"]
    }
  ],
  "implementationOrder": [
    "Ticket 1: Information Sufficiency Detection",
    "Ticket 3: Smart Conversation Logic",
    "Ticket 2: Professional Question Templates",
    "Ticket 4: Conversation State Management",
    "Ticket 5: Professional Disclaimers"
  ]
}
